
<html>
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>Questa Coverage Report</title>
  <link rel="StyleSheet" media="screen" href="../css/hdl2html.css"/>
</head>
<body id="hdl2html">
  <tt>
<pre>
<a name="1"><q-n>     1  </q-n></a><q-m>//-----------------------------------------------------------------------------</q-m>
<a name="2"><q-n>     2  </q-n></a><q-m>// The confidential and proprietary information contained in this file may</q-m>
<a name="3"><q-n>     3  </q-n></a><q-m>// only be used by a person authorised under and to the extent permitted</q-m>
<a name="4"><q-n>     4  </q-n></a><q-m>// by a subsisting licensing agreement from ARM Limited.</q-m>
<a name="5"><q-n>     5  </q-n></a><q-m>//</q-m>
<a name="6"><q-n>     6  </q-n></a><q-m>//            (C) COPYRIGHT 2001-2013-2019 ARM Limited.</q-m>
<a name="7"><q-n>     7  </q-n></a><q-m>//                ALL RIGHTS RESERVED</q-m>
<a name="8"><q-n>     8  </q-n></a><q-m>//</q-m>
<a name="9"><q-n>     9  </q-n></a><q-m>// This entire notice must be reproduced on all copies of this file</q-m>
<a name="10"><q-n>     10  </q-n></a><q-m>// and copies of this file may only be made by a person if such person is</q-m>
<a name="11"><q-n>     11  </q-n></a><q-m>// permitted to do so under the terms of a subsisting license agreement</q-m>
<a name="12"><q-n>     12  </q-n></a><q-m>// from ARM Limited.</q-m>
<a name="13"><q-n>     13  </q-n></a><q-m>//</q-m>
<a name="14"><q-n>     14  </q-n></a><q-m>//      SVN Information</q-m>
<a name="15"><q-n>     15  </q-n></a><q-m>//</q-m>
<a name="16"><q-n>     16  </q-n></a><q-m>//      Checked In          : $Date: 2012-10-15 18:01:36 +0100 (Mon, 15 Oct 2012) $</q-m>
<a name="17"><q-n>     17  </q-n></a><q-m>//</q-m>
<a name="18"><q-n>     18  </q-n></a><q-m>//      Revision            : $Revision: 225465 $</q-m>
<a name="19"><q-n>     19  </q-n></a><q-m>//</q-m>
<a name="20"><q-n>     20  </q-n></a><q-m>//      Release Information : Cortex-M System Design Kit-r1p0-01rel0</q-m>
<a name="21"><q-n>     21  </q-n></a><q-m>//</q-m>
<a name="22"><q-n>     22  </q-n></a><q-m>//-----------------------------------------------------------------------------</q-m>
<a name="23"><q-n>     23  </q-n></a><q-m>//</q-m>
<a name="24"><q-n>     24  </q-n></a><q-m>//------------------------------------------------------------------------------</q-m>
<a name="25"><q-n>     25  </q-n></a><q-m>//  Abstract            : BusMatrix is the top-level which connects together</q-m>
<a name="26"><q-n>     26  </q-n></a><q-m>//                        the required Input Stages, MatrixDecodes, Output</q-m>
<a name="27"><q-n>     27  </q-n></a><q-m>//                        Stages and Output Arbitration blocks.</q-m>
<a name="28"><q-n>     28  </q-n></a><q-m>//</q-m>
<a name="29"><q-n>     29  </q-n></a><q-m>//                        Supports the following configured options:</q-m>
<a name="30"><q-n>     30  </q-n></a><q-m>//</q-m>
<a name="31"><q-n>     31  </q-n></a><q-m>//                         - Architecture type 'ahb2',</q-m>
<a name="32"><q-n>     32  </q-n></a><q-m>//                         - 5 slave ports (connecting to masters),</q-m>
<a name="33"><q-n>     33  </q-n></a><q-m>//                         - 4 master ports (connecting to slaves),</q-m>
<a name="34"><q-n>     34  </q-n></a><q-m>//                         - Routing address width of 32 bits,</q-m>
<a name="35"><q-n>     35  </q-n></a><q-m>//                         - Routing data width of 32 bits,</q-m>
<a name="36"><q-n>     36  </q-n></a><q-m>//                         - xUSER signal width of 32 bits,</q-m>
<a name="37"><q-n>     37  </q-n></a><q-m>//                         - Arbiter type 'fixed',</q-m>
<a name="38"><q-n>     38  </q-n></a><q-m>//                         - Connectivity mapping:</q-m>
<a name="39"><q-n>     39  </q-n></a><q-m>//                             S0 -&gt; M0, M1, </q-m>
<a name="40"><q-n>     40  </q-n></a><q-m>//                             S1 -&gt; M0, M1, </q-m>
<a name="41"><q-n>     41  </q-n></a><q-m>//                             S3 -&gt; M3, M2, </q-m>
<a name="42"><q-n>     42  </q-n></a><q-m>//                             S4 -&gt; M0, M1, M2, </q-m>
<a name="43"><q-n>     43  </q-n></a><q-m>//                             S5 -&gt; M0, M1, M3,</q-m>
<a name="44"><q-n>     44  </q-n></a><q-m>//                         - Connectivity type 'sparse'.</q-m>
<a name="45"><q-n>     45  </q-n></a><q-m>//</q-m>
<a name="46"><q-n>     46  </q-n></a><q-m>//------------------------------------------------------------------------------</q-m>
<a name="47"><q-n>     47  </q-n></a>
<a name="48"><q-n>     48  </q-n></a>`<q-a>timescale</q-w> 1<q-v>ns</q-w>/1<q-v>ps</q-w>
<a name="49"><q-n>     49  </q-n></a>
<a name="50"><q-n>     50  </q-n></a><q-w>module</q-w> cm3_matrix (
<a name="51"><q-n>     51  </q-n></a>
<a name="52"><q-n>     52  </q-n></a>    <q-m>// Common AHB signals</q-m>
<a name="53"><q-n>     53  </q-n></a>    HCLK,
<a name="54"><q-n>     54  </q-n></a>    HRESETn,
<a name="55"><q-n>     55  </q-n></a>
<a name="56"><q-n>     56  </q-n></a>    <q-m>// System address remapping control</q-m>
<a name="57"><q-n>     57  </q-n></a>    REMAP,
<a name="58"><q-n>     58  </q-n></a>
<a name="59"><q-n>     59  </q-n></a>    <q-m>// Input port SI0 (inputs from master 0)</q-m>
<a name="60"><q-n>     60  </q-n></a>    HSELS0,
<a name="61"><q-n>     61  </q-n></a>    HADDRS0,
<a name="62"><q-n>     62  </q-n></a>    HTRANSS0,
<a name="63"><q-n>     63  </q-n></a>    HWRITES0,
<a name="64"><q-n>     64  </q-n></a>    HSIZES0,
<a name="65"><q-n>     65  </q-n></a>    HBURSTS0,
<a name="66"><q-n>     66  </q-n></a>    HPROTS0,
<a name="67"><q-n>     67  </q-n></a>    HMASTERS0,
<a name="68"><q-n>     68  </q-n></a>    HWDATAS0,
<a name="69"><q-n>     69  </q-n></a>    HMASTLOCKS0,
<a name="70"><q-n>     70  </q-n></a>    HREADYS0,
<a name="71"><q-n>     71  </q-n></a>    HAUSERS0,
<a name="72"><q-n>     72  </q-n></a>    HWUSERS0,
<a name="73"><q-n>     73  </q-n></a>
<a name="74"><q-n>     74  </q-n></a>    <q-m>// Input port SI1 (inputs from master 1)</q-m>
<a name="75"><q-n>     75  </q-n></a>    HSELS1,
<a name="76"><q-n>     76  </q-n></a>    HADDRS1,
<a name="77"><q-n>     77  </q-n></a>    HTRANSS1,
<a name="78"><q-n>     78  </q-n></a>    HWRITES1,
<a name="79"><q-n>     79  </q-n></a>    HSIZES1,
<a name="80"><q-n>     80  </q-n></a>    HBURSTS1,
<a name="81"><q-n>     81  </q-n></a>    HPROTS1,
<a name="82"><q-n>     82  </q-n></a>    HMASTERS1,
<a name="83"><q-n>     83  </q-n></a>    HWDATAS1,
<a name="84"><q-n>     84  </q-n></a>    HMASTLOCKS1,
<a name="85"><q-n>     85  </q-n></a>    HREADYS1,
<a name="86"><q-n>     86  </q-n></a>    HAUSERS1,
<a name="87"><q-n>     87  </q-n></a>    HWUSERS1,
<a name="88"><q-n>     88  </q-n></a>
<a name="89"><q-n>     89  </q-n></a>    <q-m>// Input port SI2 (inputs from master 2)</q-m>
<a name="90"><q-n>     90  </q-n></a>    HSELS3,
<a name="91"><q-n>     91  </q-n></a>    HADDRS3,
<a name="92"><q-n>     92  </q-n></a>    HTRANSS3,
<a name="93"><q-n>     93  </q-n></a>    HWRITES3,
<a name="94"><q-n>     94  </q-n></a>    HSIZES3,
<a name="95"><q-n>     95  </q-n></a>    HBURSTS3,
<a name="96"><q-n>     96  </q-n></a>    HPROTS3,
<a name="97"><q-n>     97  </q-n></a>    HMASTERS3,
<a name="98"><q-n>     98  </q-n></a>    HWDATAS3,
<a name="99"><q-n>     99  </q-n></a>    HMASTLOCKS3,
<a name="100"><q-n>     100  </q-n></a>    HREADYS3,
<a name="101"><q-n>     101  </q-n></a>    HAUSERS3,
<a name="102"><q-n>     102  </q-n></a>    HWUSERS3,
<a name="103"><q-n>     103  </q-n></a>
<a name="104"><q-n>     104  </q-n></a>    <q-m>// Input port SI3 (inputs from master 3)</q-m>
<a name="105"><q-n>     105  </q-n></a>    HSELS4,
<a name="106"><q-n>     106  </q-n></a>    HADDRS4,
<a name="107"><q-n>     107  </q-n></a>    HTRANSS4,
<a name="108"><q-n>     108  </q-n></a>    HWRITES4,
<a name="109"><q-n>     109  </q-n></a>    HSIZES4,
<a name="110"><q-n>     110  </q-n></a>    HBURSTS4,
<a name="111"><q-n>     111  </q-n></a>    HPROTS4,
<a name="112"><q-n>     112  </q-n></a>    HMASTERS4,
<a name="113"><q-n>     113  </q-n></a>    HWDATAS4,
<a name="114"><q-n>     114  </q-n></a>    HMASTLOCKS4,
<a name="115"><q-n>     115  </q-n></a>    HREADYS4,
<a name="116"><q-n>     116  </q-n></a>    HAUSERS4,
<a name="117"><q-n>     117  </q-n></a>    HWUSERS4,
<a name="118"><q-n>     118  </q-n></a>
<a name="119"><q-n>     119  </q-n></a>    <q-m>// Input port SI4 (inputs from master 4)</q-m>
<a name="120"><q-n>     120  </q-n></a>    HSELS5,
<a name="121"><q-n>     121  </q-n></a>    HADDRS5,
<a name="122"><q-n>     122  </q-n></a>    HTRANSS5,
<a name="123"><q-n>     123  </q-n></a>    HWRITES5,
<a name="124"><q-n>     124  </q-n></a>    HSIZES5,
<a name="125"><q-n>     125  </q-n></a>    HBURSTS5,
<a name="126"><q-n>     126  </q-n></a>    HPROTS5,
<a name="127"><q-n>     127  </q-n></a>    HMASTERS5,
<a name="128"><q-n>     128  </q-n></a>    HWDATAS5,
<a name="129"><q-n>     129  </q-n></a>    HMASTLOCKS5,
<a name="130"><q-n>     130  </q-n></a>    HREADYS5,
<a name="131"><q-n>     131  </q-n></a>    HAUSERS5,
<a name="132"><q-n>     132  </q-n></a>    HWUSERS5,
<a name="133"><q-n>     133  </q-n></a>
<a name="134"><q-n>     134  </q-n></a>    <q-m>// Output port MI0 (inputs from slave 0)</q-m>
<a name="135"><q-n>     135  </q-n></a>    HRDATAM0,
<a name="136"><q-n>     136  </q-n></a>    HREADYOUTM0,
<a name="137"><q-n>     137  </q-n></a>    HRESPM0,
<a name="138"><q-n>     138  </q-n></a>    HRUSERM0,
<a name="139"><q-n>     139  </q-n></a>
<a name="140"><q-n>     140  </q-n></a>    <q-m>// Output port MI1 (inputs from slave 1)</q-m>
<a name="141"><q-n>     141  </q-n></a>    HRDATAM1,
<a name="142"><q-n>     142  </q-n></a>    HREADYOUTM1,
<a name="143"><q-n>     143  </q-n></a>    HRESPM1,
<a name="144"><q-n>     144  </q-n></a>    HRUSERM1,
<a name="145"><q-n>     145  </q-n></a>
<a name="146"><q-n>     146  </q-n></a>    <q-m>// Output port MI2 (inputs from slave 2)</q-m>
<a name="147"><q-n>     147  </q-n></a>    HRDATAM2,
<a name="148"><q-n>     148  </q-n></a>    HREADYOUTM2,
<a name="149"><q-n>     149  </q-n></a>    HRESPM2,
<a name="150"><q-n>     150  </q-n></a>    HRUSERM2,
<a name="151"><q-n>     151  </q-n></a>
<a name="152"><q-n>     152  </q-n></a>    <q-m>// Output port MI3 (inputs from slave 3)</q-m>
<a name="153"><q-n>     153  </q-n></a>    HRDATAM3,
<a name="154"><q-n>     154  </q-n></a>    HREADYOUTM3,
<a name="155"><q-n>     155  </q-n></a>    HRESPM3,
<a name="156"><q-n>     156  </q-n></a>    HRUSERM3,
<a name="157"><q-n>     157  </q-n></a>
<a name="158"><q-n>     158  </q-n></a>    <q-m>// Scan test dummy signals; not connected until scan insertion</q-m>
<a name="159"><q-n>     159  </q-n></a>    SCANENABLE,   <q-m>// Scan Test Mode Enable</q-m>
<a name="160"><q-n>     160  </q-n></a>    SCANINHCLK,   <q-m>// Scan Chain Input</q-m>
<a name="161"><q-n>     161  </q-n></a>
<a name="162"><q-n>     162  </q-n></a>
<a name="163"><q-n>     163  </q-n></a>    <q-m>// Output port MI0 (outputs to slave 0)</q-m>
<a name="164"><q-n>     164  </q-n></a>    HSELM0,
<a name="165"><q-n>     165  </q-n></a>    HADDRM0,
<a name="166"><q-n>     166  </q-n></a>    HTRANSM0,
<a name="167"><q-n>     167  </q-n></a>    HWRITEM0,
<a name="168"><q-n>     168  </q-n></a>    HSIZEM0,
<a name="169"><q-n>     169  </q-n></a>    HBURSTM0,
<a name="170"><q-n>     170  </q-n></a>    HPROTM0,
<a name="171"><q-n>     171  </q-n></a>    HMASTERM0,
<a name="172"><q-n>     172  </q-n></a>    HWDATAM0,
<a name="173"><q-n>     173  </q-n></a>    HMASTLOCKM0,
<a name="174"><q-n>     174  </q-n></a>    HREADYMUXM0,
<a name="175"><q-n>     175  </q-n></a>    HAUSERM0,
<a name="176"><q-n>     176  </q-n></a>    HWUSERM0,
<a name="177"><q-n>     177  </q-n></a>
<a name="178"><q-n>     178  </q-n></a>    <q-m>// Output port MI1 (outputs to slave 1)</q-m>
<a name="179"><q-n>     179  </q-n></a>    HSELM1,
<a name="180"><q-n>     180  </q-n></a>    HADDRM1,
<a name="181"><q-n>     181  </q-n></a>    HTRANSM1,
<a name="182"><q-n>     182  </q-n></a>    HWRITEM1,
<a name="183"><q-n>     183  </q-n></a>    HSIZEM1,
<a name="184"><q-n>     184  </q-n></a>    HBURSTM1,
<a name="185"><q-n>     185  </q-n></a>    HPROTM1,
<a name="186"><q-n>     186  </q-n></a>    HMASTERM1,
<a name="187"><q-n>     187  </q-n></a>    HWDATAM1,
<a name="188"><q-n>     188  </q-n></a>    HMASTLOCKM1,
<a name="189"><q-n>     189  </q-n></a>    HREADYMUXM1,
<a name="190"><q-n>     190  </q-n></a>    HAUSERM1,
<a name="191"><q-n>     191  </q-n></a>    HWUSERM1,
<a name="192"><q-n>     192  </q-n></a>
<a name="193"><q-n>     193  </q-n></a>    <q-m>// Output port MI2 (outputs to slave 2)</q-m>
<a name="194"><q-n>     194  </q-n></a>    HSELM2,
<a name="195"><q-n>     195  </q-n></a>    HADDRM2,
<a name="196"><q-n>     196  </q-n></a>    HTRANSM2,
<a name="197"><q-n>     197  </q-n></a>    HWRITEM2,
<a name="198"><q-n>     198  </q-n></a>    HSIZEM2,
<a name="199"><q-n>     199  </q-n></a>    HBURSTM2,
<a name="200"><q-n>     200  </q-n></a>    HPROTM2,
<a name="201"><q-n>     201  </q-n></a>    HMASTERM2,
<a name="202"><q-n>     202  </q-n></a>    HWDATAM2,
<a name="203"><q-n>     203  </q-n></a>    HMASTLOCKM2,
<a name="204"><q-n>     204  </q-n></a>    HREADYMUXM2,
<a name="205"><q-n>     205  </q-n></a>    HAUSERM2,
<a name="206"><q-n>     206  </q-n></a>    HWUSERM2,
<a name="207"><q-n>     207  </q-n></a>
<a name="208"><q-n>     208  </q-n></a>    <q-m>// Output port MI3 (outputs to slave 3)</q-m>
<a name="209"><q-n>     209  </q-n></a>    HSELM3,
<a name="210"><q-n>     210  </q-n></a>    HADDRM3,
<a name="211"><q-n>     211  </q-n></a>    HTRANSM3,
<a name="212"><q-n>     212  </q-n></a>    HWRITEM3,
<a name="213"><q-n>     213  </q-n></a>    HSIZEM3,
<a name="214"><q-n>     214  </q-n></a>    HBURSTM3,
<a name="215"><q-n>     215  </q-n></a>    HPROTM3,
<a name="216"><q-n>     216  </q-n></a>    HMASTERM3,
<a name="217"><q-n>     217  </q-n></a>    HWDATAM3,
<a name="218"><q-n>     218  </q-n></a>    HMASTLOCKM3,
<a name="219"><q-n>     219  </q-n></a>    HREADYMUXM3,
<a name="220"><q-n>     220  </q-n></a>    HAUSERM3,
<a name="221"><q-n>     221  </q-n></a>    HWUSERM3,
<a name="222"><q-n>     222  </q-n></a>
<a name="223"><q-n>     223  </q-n></a>    <q-m>// Input port SI0 (outputs to master 0)</q-m>
<a name="224"><q-n>     224  </q-n></a>    HRDATAS0,
<a name="225"><q-n>     225  </q-n></a>    HREADYOUTS0,
<a name="226"><q-n>     226  </q-n></a>    HRESPS0,
<a name="227"><q-n>     227  </q-n></a>    HRUSERS0,
<a name="228"><q-n>     228  </q-n></a>
<a name="229"><q-n>     229  </q-n></a>    <q-m>// Input port SI1 (outputs to master 1)</q-m>
<a name="230"><q-n>     230  </q-n></a>    HRDATAS1,
<a name="231"><q-n>     231  </q-n></a>    HREADYOUTS1,
<a name="232"><q-n>     232  </q-n></a>    HRESPS1,
<a name="233"><q-n>     233  </q-n></a>    HRUSERS1,
<a name="234"><q-n>     234  </q-n></a>
<a name="235"><q-n>     235  </q-n></a>    <q-m>// Input port SI2 (outputs to master 2)</q-m>
<a name="236"><q-n>     236  </q-n></a>    HRDATAS3,
<a name="237"><q-n>     237  </q-n></a>    HREADYOUTS3,
<a name="238"><q-n>     238  </q-n></a>    HRESPS3,
<a name="239"><q-n>     239  </q-n></a>    HRUSERS3,
<a name="240"><q-n>     240  </q-n></a>
<a name="241"><q-n>     241  </q-n></a>    <q-m>// Input port SI3 (outputs to master 3)</q-m>
<a name="242"><q-n>     242  </q-n></a>    HRDATAS4,
<a name="243"><q-n>     243  </q-n></a>    HREADYOUTS4,
<a name="244"><q-n>     244  </q-n></a>    HRESPS4,
<a name="245"><q-n>     245  </q-n></a>    HRUSERS4,
<a name="246"><q-n>     246  </q-n></a>
<a name="247"><q-n>     247  </q-n></a>    <q-m>// Input port SI4 (outputs to master 4)</q-m>
<a name="248"><q-n>     248  </q-n></a>    HRDATAS5,
<a name="249"><q-n>     249  </q-n></a>    HREADYOUTS5,
<a name="250"><q-n>     250  </q-n></a>    HRESPS5,
<a name="251"><q-n>     251  </q-n></a>    HRUSERS5,
<a name="252"><q-n>     252  </q-n></a>
<a name="253"><q-n>     253  </q-n></a>    <q-m>// Scan test dummy signals; not connected until scan insertion</q-m>
<a name="254"><q-n>     254  </q-n></a>    SCANOUTHCLK   <q-m>// Scan Chain Output</q-m>
<a name="255"><q-n>     255  </q-n></a>
<a name="256"><q-n>     256  </q-n></a>    );
<a name="257"><q-n>     257  </q-n></a>
<a name="258"><q-n>     258  </q-n></a>
<a name="259"><q-n>     259  </q-n></a><q-m>// -----------------------------------------------------------------------------</q-m>
<a name="260"><q-n>     260  </q-n></a><q-m>// Input and Output declarations</q-m>
<a name="261"><q-n>     261  </q-n></a><q-m>// -----------------------------------------------------------------------------</q-m>
<a name="262"><q-n>     262  </q-n></a>
<a name="263"><q-n>     263  </q-n></a>    <q-m>// Common AHB signals</q-m>
<a name="264"><q-n>     264  </q-n></a>    <q-w>input</q-w>         HCLK;            <q-m>// AHB System Clock</q-m>
<a name="265"><q-n>     265  </q-n></a>    <q-w>input</q-w>         HRESETn;         <q-m>// AHB System Reset</q-m>
<a name="266"><q-n>     266  </q-n></a>
<a name="267"><q-n>     267  </q-n></a>    <q-m>// System address remapping control</q-m>
<a name="268"><q-n>     268  </q-n></a>    <q-w>input</q-w>   [3:0] REMAP;           <q-m>// REMAP input</q-m>
<a name="269"><q-n>     269  </q-n></a>
<a name="270"><q-n>     270  </q-n></a>    <q-m>// Input port SI0 (inputs from master 0)</q-m>
<a name="271"><q-n>     271  </q-n></a>    <q-w>input</q-w>         HSELS0;          <q-m>// Slave Select</q-m>
<a name="272"><q-n>     272  </q-n></a>    <q-w>input</q-w>  [31:0] HADDRS0;         <q-m>// Address bus</q-m>
<a name="273"><q-n>     273  </q-n></a>    <q-w>input</q-w>   [1:0] HTRANSS0;        <q-m>// Transfer type</q-m>
<a name="274"><q-n>     274  </q-n></a>    <q-w>input</q-w>         HWRITES0;        <q-m>// Transfer direction</q-m>
<a name="275"><q-n>     275  </q-n></a>    <q-w>input</q-w>   [2:0] HSIZES0;         <q-m>// Transfer size</q-m>
<a name="276"><q-n>     276  </q-n></a>    <q-w>input</q-w>   [2:0] HBURSTS0;        <q-m>// Burst type</q-m>
<a name="277"><q-n>     277  </q-n></a>    <q-w>input</q-w>   [3:0] HPROTS0;         <q-m>// Protection control</q-m>
<a name="278"><q-n>     278  </q-n></a>    <q-w>input</q-w>   [3:0] HMASTERS0;       <q-m>// Master select</q-m>
<a name="279"><q-n>     279  </q-n></a>    <q-w>input</q-w>  [31:0] HWDATAS0;        <q-m>// Write data</q-m>
<a name="280"><q-n>     280  </q-n></a>    <q-w>input</q-w>         HMASTLOCKS0;     <q-m>// Locked Sequence</q-m>
<a name="281"><q-n>     281  </q-n></a>    <q-w>input</q-w>         HREADYS0;        <q-m>// Transfer done</q-m>
<a name="282"><q-n>     282  </q-n></a>    <q-w>input</q-w>  [31:0] HAUSERS0;        <q-m>// Address USER signals</q-m>
<a name="283"><q-n>     283  </q-n></a>    <q-w>input</q-w>  [31:0] HWUSERS0;        <q-m>// Write-data USER signals</q-m>
<a name="284"><q-n>     284  </q-n></a>
<a name="285"><q-n>     285  </q-n></a>    <q-m>// Input port SI1 (inputs from master 1)</q-m>
<a name="286"><q-n>     286  </q-n></a>    <q-w>input</q-w>         HSELS1;          <q-m>// Slave Select</q-m>
<a name="287"><q-n>     287  </q-n></a>    <q-w>input</q-w>  [31:0] HADDRS1;         <q-m>// Address bus</q-m>
<a name="288"><q-n>     288  </q-n></a>    <q-w>input</q-w>   [1:0] HTRANSS1;        <q-m>// Transfer type</q-m>
<a name="289"><q-n>     289  </q-n></a>    <q-w>input</q-w>         HWRITES1;        <q-m>// Transfer direction</q-m>
<a name="290"><q-n>     290  </q-n></a>    <q-w>input</q-w>   [2:0] HSIZES1;         <q-m>// Transfer size</q-m>
<a name="291"><q-n>     291  </q-n></a>    <q-w>input</q-w>   [2:0] HBURSTS1;        <q-m>// Burst type</q-m>
<a name="292"><q-n>     292  </q-n></a>    <q-w>input</q-w>   [3:0] HPROTS1;         <q-m>// Protection control</q-m>
<a name="293"><q-n>     293  </q-n></a>    <q-w>input</q-w>   [3:0] HMASTERS1;       <q-m>// Master select</q-m>
<a name="294"><q-n>     294  </q-n></a>    <q-w>input</q-w>  [31:0] HWDATAS1;        <q-m>// Write data</q-m>
<a name="295"><q-n>     295  </q-n></a>    <q-w>input</q-w>         HMASTLOCKS1;     <q-m>// Locked Sequence</q-m>
<a name="296"><q-n>     296  </q-n></a>    <q-w>input</q-w>         HREADYS1;        <q-m>// Transfer done</q-m>
<a name="297"><q-n>     297  </q-n></a>    <q-w>input</q-w>  [31:0] HAUSERS1;        <q-m>// Address USER signals</q-m>
<a name="298"><q-n>     298  </q-n></a>    <q-w>input</q-w>  [31:0] HWUSERS1;        <q-m>// Write-data USER signals</q-m>
<a name="299"><q-n>     299  </q-n></a>
<a name="300"><q-n>     300  </q-n></a>    <q-m>// Input port SI2 (inputs from master 2)</q-m>
<a name="301"><q-n>     301  </q-n></a>    <q-w>input</q-w>         HSELS3;          <q-m>// Slave Select</q-m>
<a name="302"><q-n>     302  </q-n></a>    <q-w>input</q-w>  [31:0] HADDRS3;         <q-m>// Address bus</q-m>
<a name="303"><q-n>     303  </q-n></a>    <q-w>input</q-w>   [1:0] HTRANSS3;        <q-m>// Transfer type</q-m>
<a name="304"><q-n>     304  </q-n></a>    <q-w>input</q-w>         HWRITES3;        <q-m>// Transfer direction</q-m>
<a name="305"><q-n>     305  </q-n></a>    <q-w>input</q-w>   [2:0] HSIZES3;         <q-m>// Transfer size</q-m>
<a name="306"><q-n>     306  </q-n></a>    <q-w>input</q-w>   [2:0] HBURSTS3;        <q-m>// Burst type</q-m>
<a name="307"><q-n>     307  </q-n></a>    <q-w>input</q-w>   [3:0] HPROTS3;         <q-m>// Protection control</q-m>
<a name="308"><q-n>     308  </q-n></a>    <q-w>input</q-w>   [3:0] HMASTERS3;       <q-m>// Master select</q-m>
<a name="309"><q-n>     309  </q-n></a>    <q-w>input</q-w>  [31:0] HWDATAS3;        <q-m>// Write data</q-m>
<a name="310"><q-n>     310  </q-n></a>    <q-w>input</q-w>         HMASTLOCKS3;     <q-m>// Locked Sequence</q-m>
<a name="311"><q-n>     311  </q-n></a>    <q-w>input</q-w>         HREADYS3;        <q-m>// Transfer done</q-m>
<a name="312"><q-n>     312  </q-n></a>    <q-w>input</q-w>  [31:0] HAUSERS3;        <q-m>// Address USER signals</q-m>
<a name="313"><q-n>     313  </q-n></a>    <q-w>input</q-w>  [31:0] HWUSERS3;        <q-m>// Write-data USER signals</q-m>
<a name="314"><q-n>     314  </q-n></a>
<a name="315"><q-n>     315  </q-n></a>    <q-m>// Input port SI3 (inputs from master 3)</q-m>
<a name="316"><q-n>     316  </q-n></a>    <q-w>input</q-w>         HSELS4;          <q-m>// Slave Select</q-m>
<a name="317"><q-n>     317  </q-n></a>    <q-w>input</q-w>  [31:0] HADDRS4;         <q-m>// Address bus</q-m>
<a name="318"><q-n>     318  </q-n></a>    <q-w>input</q-w>   [1:0] HTRANSS4;        <q-m>// Transfer type</q-m>
<a name="319"><q-n>     319  </q-n></a>    <q-w>input</q-w>         HWRITES4;        <q-m>// Transfer direction</q-m>
<a name="320"><q-n>     320  </q-n></a>    <q-w>input</q-w>   [2:0] HSIZES4;         <q-m>// Transfer size</q-m>
<a name="321"><q-n>     321  </q-n></a>    <q-w>input</q-w>   [2:0] HBURSTS4;        <q-m>// Burst type</q-m>
<a name="322"><q-n>     322  </q-n></a>    <q-w>input</q-w>   [3:0] HPROTS4;         <q-m>// Protection control</q-m>
<a name="323"><q-n>     323  </q-n></a>    <q-w>input</q-w>   [3:0] HMASTERS4;       <q-m>// Master select</q-m>
<a name="324"><q-n>     324  </q-n></a>    <q-w>input</q-w>  [31:0] HWDATAS4;        <q-m>// Write data</q-m>
<a name="325"><q-n>     325  </q-n></a>    <q-w>input</q-w>         HMASTLOCKS4;     <q-m>// Locked Sequence</q-m>
<a name="326"><q-n>     326  </q-n></a>    <q-w>input</q-w>         HREADYS4;        <q-m>// Transfer done</q-m>
<a name="327"><q-n>     327  </q-n></a>    <q-w>input</q-w>  [31:0] HAUSERS4;        <q-m>// Address USER signals</q-m>
<a name="328"><q-n>     328  </q-n></a>    <q-w>input</q-w>  [31:0] HWUSERS4;        <q-m>// Write-data USER signals</q-m>
<a name="329"><q-n>     329  </q-n></a>
<a name="330"><q-n>     330  </q-n></a>    <q-m>// Input port SI4 (inputs from master 4)</q-m>
<a name="331"><q-n>     331  </q-n></a>    <q-w>input</q-w>         HSELS5;          <q-m>// Slave Select</q-m>
<a name="332"><q-n>     332  </q-n></a>    <q-w>input</q-w>  [31:0] HADDRS5;         <q-m>// Address bus</q-m>
<a name="333"><q-n>     333  </q-n></a>    <q-w>input</q-w>   [1:0] HTRANSS5;        <q-m>// Transfer type</q-m>
<a name="334"><q-n>     334  </q-n></a>    <q-w>input</q-w>         HWRITES5;        <q-m>// Transfer direction</q-m>
<a name="335"><q-n>     335  </q-n></a>    <q-w>input</q-w>   [2:0] HSIZES5;         <q-m>// Transfer size</q-m>
<a name="336"><q-n>     336  </q-n></a>    <q-w>input</q-w>   [2:0] HBURSTS5;        <q-m>// Burst type</q-m>
<a name="337"><q-n>     337  </q-n></a>    <q-w>input</q-w>   [3:0] HPROTS5;         <q-m>// Protection control</q-m>
<a name="338"><q-n>     338  </q-n></a>    <q-w>input</q-w>   [3:0] HMASTERS5;       <q-m>// Master select</q-m>
<a name="339"><q-n>     339  </q-n></a>    <q-w>input</q-w>  [31:0] HWDATAS5;        <q-m>// Write data</q-m>
<a name="340"><q-n>     340  </q-n></a>    <q-w>input</q-w>         HMASTLOCKS5;     <q-m>// Locked Sequence</q-m>
<a name="341"><q-n>     341  </q-n></a>    <q-w>input</q-w>         HREADYS5;        <q-m>// Transfer done</q-m>
<a name="342"><q-n>     342  </q-n></a>    <q-w>input</q-w>  [31:0] HAUSERS5;        <q-m>// Address USER signals</q-m>
<a name="343"><q-n>     343  </q-n></a>    <q-w>input</q-w>  [31:0] HWUSERS5;        <q-m>// Write-data USER signals</q-m>
<a name="344"><q-n>     344  </q-n></a>
<a name="345"><q-n>     345  </q-n></a>    <q-m>// Output port MI0 (inputs from slave 0)</q-m>
<a name="346"><q-n>     346  </q-n></a>    <q-w>input</q-w>  [31:0] HRDATAM0;        <q-m>// Read data bus</q-m>
<a name="347"><q-n>     347  </q-n></a>    <q-w>input</q-w>         HREADYOUTM0;     <q-m>// HREADY feedback</q-m>
<a name="348"><q-n>     348  </q-n></a>    <q-w>input</q-w>   [1:0] HRESPM0;         <q-m>// Transfer response</q-m>
<a name="349"><q-n>     349  </q-n></a>    <q-w>input</q-w>  [31:0] HRUSERM0;        <q-m>// Read-data USER signals</q-m>
<a name="350"><q-n>     350  </q-n></a>
<a name="351"><q-n>     351  </q-n></a>    <q-m>// Output port MI1 (inputs from slave 1)</q-m>
<a name="352"><q-n>     352  </q-n></a>    <q-w>input</q-w>  [31:0] HRDATAM1;        <q-m>// Read data bus</q-m>
<a name="353"><q-n>     353  </q-n></a>    <q-w>input</q-w>         HREADYOUTM1;     <q-m>// HREADY feedback</q-m>
<a name="354"><q-n>     354  </q-n></a>    <q-w>input</q-w>   [1:0] HRESPM1;         <q-m>// Transfer response</q-m>
<a name="355"><q-n>     355  </q-n></a>    <q-w>input</q-w>  [31:0] HRUSERM1;        <q-m>// Read-data USER signals</q-m>
<a name="356"><q-n>     356  </q-n></a>
<a name="357"><q-n>     357  </q-n></a>    <q-m>// Output port MI2 (inputs from slave 2)</q-m>
<a name="358"><q-n>     358  </q-n></a>    <q-w>input</q-w>  [31:0] HRDATAM2;        <q-m>// Read data bus</q-m>
<a name="359"><q-n>     359  </q-n></a>    <q-w>input</q-w>         HREADYOUTM2;     <q-m>// HREADY feedback</q-m>
<a name="360"><q-n>     360  </q-n></a>    <q-w>input</q-w>   [1:0] HRESPM2;         <q-m>// Transfer response</q-m>
<a name="361"><q-n>     361  </q-n></a>    <q-w>input</q-w>  [31:0] HRUSERM2;        <q-m>// Read-data USER signals</q-m>
<a name="362"><q-n>     362  </q-n></a>
<a name="363"><q-n>     363  </q-n></a>    <q-m>// Output port MI3 (inputs from slave 3)</q-m>
<a name="364"><q-n>     364  </q-n></a>    <q-w>input</q-w>  [31:0] HRDATAM3;        <q-m>// Read data bus</q-m>
<a name="365"><q-n>     365  </q-n></a>    <q-w>input</q-w>         HREADYOUTM3;     <q-m>// HREADY feedback</q-m>
<a name="366"><q-n>     366  </q-n></a>    <q-w>input</q-w>   [1:0] HRESPM3;         <q-m>// Transfer response</q-m>
<a name="367"><q-n>     367  </q-n></a>    <q-w>input</q-w>  [31:0] HRUSERM3;        <q-m>// Read-data USER signals</q-m>
<a name="368"><q-n>     368  </q-n></a>
<a name="369"><q-n>     369  </q-n></a>    <q-m>// Scan test dummy signals; not connected until scan insertion</q-m>
<a name="370"><q-n>     370  </q-n></a>    <q-w>input</q-w>         SCANENABLE;      <q-m>// Scan enable signal</q-m>
<a name="371"><q-n>     371  </q-n></a>    <q-w>input</q-w>         SCANINHCLK;      <q-m>// HCLK scan input</q-m>
<a name="372"><q-n>     372  </q-n></a>
<a name="373"><q-n>     373  </q-n></a>
<a name="374"><q-n>     374  </q-n></a>    <q-m>// Output port MI0 (outputs to slave 0)</q-m>
<a name="375"><q-n>     375  </q-n></a>    <q-w>output</q-w>        HSELM0;          <q-m>// Slave Select</q-m>
<a name="376"><q-n>     376  </q-n></a>    <q-w>output</q-w> [31:0] HADDRM0;         <q-m>// Address bus</q-m>
<a name="377"><q-n>     377  </q-n></a>    <q-w>output</q-w>  [1:0] HTRANSM0;        <q-m>// Transfer type</q-m>
<a name="378"><q-n>     378  </q-n></a>    <q-w>output</q-w>        HWRITEM0;        <q-m>// Transfer direction</q-m>
<a name="379"><q-n>     379  </q-n></a>    <q-w>output</q-w>  [2:0] HSIZEM0;         <q-m>// Transfer size</q-m>
<a name="380"><q-n>     380  </q-n></a>    <q-w>output</q-w>  [2:0] HBURSTM0;        <q-m>// Burst type</q-m>
<a name="381"><q-n>     381  </q-n></a>    <q-w>output</q-w>  [3:0] HPROTM0;         <q-m>// Protection control</q-m>
<a name="382"><q-n>     382  </q-n></a>    <q-w>output</q-w>  [3:0] HMASTERM0;       <q-m>// Master select</q-m>
<a name="383"><q-n>     383  </q-n></a>    <q-w>output</q-w> [31:0] HWDATAM0;        <q-m>// Write data</q-m>
<a name="384"><q-n>     384  </q-n></a>    <q-w>output</q-w>        HMASTLOCKM0;     <q-m>// Locked Sequence</q-m>
<a name="385"><q-n>     385  </q-n></a>    <q-w>output</q-w>        HREADYMUXM0;     <q-m>// Transfer done</q-m>
<a name="386"><q-n>     386  </q-n></a>    <q-w>output</q-w> [31:0] HAUSERM0;        <q-m>// Address USER signals</q-m>
<a name="387"><q-n>     387  </q-n></a>    <q-w>output</q-w> [31:0] HWUSERM0;        <q-m>// Write-data USER signals</q-m>
<a name="388"><q-n>     388  </q-n></a>
<a name="389"><q-n>     389  </q-n></a>    <q-m>// Output port MI1 (outputs to slave 1)</q-m>
<a name="390"><q-n>     390  </q-n></a>    <q-w>output</q-w>        HSELM1;          <q-m>// Slave Select</q-m>
<a name="391"><q-n>     391  </q-n></a>    <q-w>output</q-w> [31:0] HADDRM1;         <q-m>// Address bus</q-m>
<a name="392"><q-n>     392  </q-n></a>    <q-w>output</q-w>  [1:0] HTRANSM1;        <q-m>// Transfer type</q-m>
<a name="393"><q-n>     393  </q-n></a>    <q-w>output</q-w>        HWRITEM1;        <q-m>// Transfer direction</q-m>
<a name="394"><q-n>     394  </q-n></a>    <q-w>output</q-w>  [2:0] HSIZEM1;         <q-m>// Transfer size</q-m>
<a name="395"><q-n>     395  </q-n></a>    <q-w>output</q-w>  [2:0] HBURSTM1;        <q-m>// Burst type</q-m>
<a name="396"><q-n>     396  </q-n></a>    <q-w>output</q-w>  [3:0] HPROTM1;         <q-m>// Protection control</q-m>
<a name="397"><q-n>     397  </q-n></a>    <q-w>output</q-w>  [3:0] HMASTERM1;       <q-m>// Master select</q-m>
<a name="398"><q-n>     398  </q-n></a>    <q-w>output</q-w> [31:0] HWDATAM1;        <q-m>// Write data</q-m>
<a name="399"><q-n>     399  </q-n></a>    <q-w>output</q-w>        HMASTLOCKM1;     <q-m>// Locked Sequence</q-m>
<a name="400"><q-n>     400  </q-n></a>    <q-w>output</q-w>        HREADYMUXM1;     <q-m>// Transfer done</q-m>
<a name="401"><q-n>     401  </q-n></a>    <q-w>output</q-w> [31:0] HAUSERM1;        <q-m>// Address USER signals</q-m>
<a name="402"><q-n>     402  </q-n></a>    <q-w>output</q-w> [31:0] HWUSERM1;        <q-m>// Write-data USER signals</q-m>
<a name="403"><q-n>     403  </q-n></a>
<a name="404"><q-n>     404  </q-n></a>    <q-m>// Output port MI2 (outputs to slave 2)</q-m>
<a name="405"><q-n>     405  </q-n></a>    <q-w>output</q-w>        HSELM2;          <q-m>// Slave Select</q-m>
<a name="406"><q-n>     406  </q-n></a>    <q-w>output</q-w> [31:0] HADDRM2;         <q-m>// Address bus</q-m>
<a name="407"><q-n>     407  </q-n></a>    <q-w>output</q-w>  [1:0] HTRANSM2;        <q-m>// Transfer type</q-m>
<a name="408"><q-n>     408  </q-n></a>    <q-w>output</q-w>        HWRITEM2;        <q-m>// Transfer direction</q-m>
<a name="409"><q-n>     409  </q-n></a>    <q-w>output</q-w>  [2:0] HSIZEM2;         <q-m>// Transfer size</q-m>
<a name="410"><q-n>     410  </q-n></a>    <q-w>output</q-w>  [2:0] HBURSTM2;        <q-m>// Burst type</q-m>
<a name="411"><q-n>     411  </q-n></a>    <q-w>output</q-w>  [3:0] HPROTM2;         <q-m>// Protection control</q-m>
<a name="412"><q-n>     412  </q-n></a>    <q-w>output</q-w>  [3:0] HMASTERM2;       <q-m>// Master select</q-m>
<a name="413"><q-n>     413  </q-n></a>    <q-w>output</q-w> [31:0] HWDATAM2;        <q-m>// Write data</q-m>
<a name="414"><q-n>     414  </q-n></a>    <q-w>output</q-w>        HMASTLOCKM2;     <q-m>// Locked Sequence</q-m>
<a name="415"><q-n>     415  </q-n></a>    <q-w>output</q-w>        HREADYMUXM2;     <q-m>// Transfer done</q-m>
<a name="416"><q-n>     416  </q-n></a>    <q-w>output</q-w> [31:0] HAUSERM2;        <q-m>// Address USER signals</q-m>
<a name="417"><q-n>     417  </q-n></a>    <q-w>output</q-w> [31:0] HWUSERM2;        <q-m>// Write-data USER signals</q-m>
<a name="418"><q-n>     418  </q-n></a>
<a name="419"><q-n>     419  </q-n></a>    <q-m>// Output port MI3 (outputs to slave 3)</q-m>
<a name="420"><q-n>     420  </q-n></a>    <q-w>output</q-w>        HSELM3;          <q-m>// Slave Select</q-m>
<a name="421"><q-n>     421  </q-n></a>    <q-w>output</q-w> [31:0] HADDRM3;         <q-m>// Address bus</q-m>
<a name="422"><q-n>     422  </q-n></a>    <q-w>output</q-w>  [1:0] HTRANSM3;        <q-m>// Transfer type</q-m>
<a name="423"><q-n>     423  </q-n></a>    <q-w>output</q-w>        HWRITEM3;        <q-m>// Transfer direction</q-m>
<a name="424"><q-n>     424  </q-n></a>    <q-w>output</q-w>  [2:0] HSIZEM3;         <q-m>// Transfer size</q-m>
<a name="425"><q-n>     425  </q-n></a>    <q-w>output</q-w>  [2:0] HBURSTM3;        <q-m>// Burst type</q-m>
<a name="426"><q-n>     426  </q-n></a>    <q-w>output</q-w>  [3:0] HPROTM3;         <q-m>// Protection control</q-m>
<a name="427"><q-n>     427  </q-n></a>    <q-w>output</q-w>  [3:0] HMASTERM3;       <q-m>// Master select</q-m>
<a name="428"><q-n>     428  </q-n></a>    <q-w>output</q-w> [31:0] HWDATAM3;        <q-m>// Write data</q-m>
<a name="429"><q-n>     429  </q-n></a>    <q-w>output</q-w>        HMASTLOCKM3;     <q-m>// Locked Sequence</q-m>
<a name="430"><q-n>     430  </q-n></a>    <q-w>output</q-w>        HREADYMUXM3;     <q-m>// Transfer done</q-m>
<a name="431"><q-n>     431  </q-n></a>    <q-w>output</q-w> [31:0] HAUSERM3;        <q-m>// Address USER signals</q-m>
<a name="432"><q-n>     432  </q-n></a>    <q-w>output</q-w> [31:0] HWUSERM3;        <q-m>// Write-data USER signals</q-m>
<a name="433"><q-n>     433  </q-n></a>
<a name="434"><q-n>     434  </q-n></a>    <q-m>// Input port SI0 (outputs to master 0)</q-m>
<a name="435"><q-n>     435  </q-n></a>    <q-w>output</q-w> [31:0] HRDATAS0;        <q-m>// Read data bus</q-m>
<a name="436"><q-n>     436  </q-n></a>    <q-w>output</q-w>        HREADYOUTS0;     <q-m>// HREADY feedback</q-m>
<a name="437"><q-n>     437  </q-n></a>    <q-w>output</q-w>  [1:0] HRESPS0;         <q-m>// Transfer response</q-m>
<a name="438"><q-n>     438  </q-n></a>    <q-w>output</q-w> [31:0] HRUSERS0;        <q-m>// Read-data USER signals</q-m>
<a name="439"><q-n>     439  </q-n></a>
<a name="440"><q-n>     440  </q-n></a>    <q-m>// Input port SI1 (outputs to master 1)</q-m>
<a name="441"><q-n>     441  </q-n></a>    <q-w>output</q-w> [31:0] HRDATAS1;        <q-m>// Read data bus</q-m>
<a name="442"><q-n>     442  </q-n></a>    <q-w>output</q-w>        HREADYOUTS1;     <q-m>// HREADY feedback</q-m>
<a name="443"><q-n>     443  </q-n></a>    <q-w>output</q-w>  [1:0] HRESPS1;         <q-m>// Transfer response</q-m>
<a name="444"><q-n>     444  </q-n></a>    <q-w>output</q-w> [31:0] HRUSERS1;        <q-m>// Read-data USER signals</q-m>
<a name="445"><q-n>     445  </q-n></a>
<a name="446"><q-n>     446  </q-n></a>    <q-m>// Input port SI2 (outputs to master 2)</q-m>
<a name="447"><q-n>     447  </q-n></a>    <q-w>output</q-w> [31:0] HRDATAS3;        <q-m>// Read data bus</q-m>
<a name="448"><q-n>     448  </q-n></a>    <q-w>output</q-w>        HREADYOUTS3;     <q-m>// HREADY feedback</q-m>
<a name="449"><q-n>     449  </q-n></a>    <q-w>output</q-w>  [1:0] HRESPS3;         <q-m>// Transfer response</q-m>
<a name="450"><q-n>     450  </q-n></a>    <q-w>output</q-w> [31:0] HRUSERS3;        <q-m>// Read-data USER signals</q-m>
<a name="451"><q-n>     451  </q-n></a>
<a name="452"><q-n>     452  </q-n></a>    <q-m>// Input port SI3 (outputs to master 3)</q-m>
<a name="453"><q-n>     453  </q-n></a>    <q-w>output</q-w> [31:0] HRDATAS4;        <q-m>// Read data bus</q-m>
<a name="454"><q-n>     454  </q-n></a>    <q-w>output</q-w>        HREADYOUTS4;     <q-m>// HREADY feedback</q-m>
<a name="455"><q-n>     455  </q-n></a>    <q-w>output</q-w>  [1:0] HRESPS4;         <q-m>// Transfer response</q-m>
<a name="456"><q-n>     456  </q-n></a>    <q-w>output</q-w> [31:0] HRUSERS4;        <q-m>// Read-data USER signals</q-m>
<a name="457"><q-n>     457  </q-n></a>
<a name="458"><q-n>     458  </q-n></a>    <q-m>// Input port SI4 (outputs to master 4)</q-m>
<a name="459"><q-n>     459  </q-n></a>    <q-w>output</q-w> [31:0] HRDATAS5;        <q-m>// Read data bus</q-m>
<a name="460"><q-n>     460  </q-n></a>    <q-w>output</q-w>        HREADYOUTS5;     <q-m>// HREADY feedback</q-m>
<a name="461"><q-n>     461  </q-n></a>    <q-w>output</q-w>  [1:0] HRESPS5;         <q-m>// Transfer response</q-m>
<a name="462"><q-n>     462  </q-n></a>    <q-w>output</q-w> [31:0] HRUSERS5;        <q-m>// Read-data USER signals</q-m>
<a name="463"><q-n>     463  </q-n></a>
<a name="464"><q-n>     464  </q-n></a>    <q-m>// Scan test dummy signals; not connected until scan insertion</q-m>
<a name="465"><q-n>     465  </q-n></a>    <q-w>output</q-w>        SCANOUTHCLK;     <q-m>// Scan Chain Output</q-m>
<a name="466"><q-n>     466  </q-n></a>
<a name="467"><q-n>     467  </q-n></a>
<a name="468"><q-n>     468  </q-n></a><q-m>// -----------------------------------------------------------------------------</q-m>
<a name="469"><q-n>     469  </q-n></a><q-m>// Wire declarations</q-m>
<a name="470"><q-n>     470  </q-n></a><q-m>// -----------------------------------------------------------------------------</q-m>
<a name="471"><q-n>     471  </q-n></a>
<a name="472"><q-n>     472  </q-n></a>    <q-m>// Common AHB signals</q-m>
<a name="473"><q-n>     473  </q-n></a>    <q-w>wire</q-w>         HCLK;            <q-m>// AHB System Clock</q-m>
<a name="474"><q-n>     474  </q-n></a>    <q-w>wire</q-w>         HRESETn;         <q-m>// AHB System Reset</q-m>
<a name="475"><q-n>     475  </q-n></a>
<a name="476"><q-n>     476  </q-n></a>    <q-m>// System address remapping control</q-m>
<a name="477"><q-n>     477  </q-n></a>    <q-w>wire</q-w>   [3:0] REMAP;           <q-m>// REMAP signal</q-m>
<a name="478"><q-n>     478  </q-n></a>
<a name="479"><q-n>     479  </q-n></a>    <q-m>// Input Port SI0</q-m>
<a name="480"><q-n>     480  </q-n></a>    <q-w>wire</q-w>         HSELS0;          <q-m>// Slave Select</q-m>
<a name="481"><q-n>     481  </q-n></a>    <q-w>wire</q-w>  [31:0] HADDRS0;         <q-m>// Address bus</q-m>
<a name="482"><q-n>     482  </q-n></a>    <q-w>wire</q-w>   [1:0] HTRANSS0;        <q-m>// Transfer type</q-m>
<a name="483"><q-n>     483  </q-n></a>    <q-w>wire</q-w>         HWRITES0;        <q-m>// Transfer direction</q-m>
<a name="484"><q-n>     484  </q-n></a>    <q-w>wire</q-w>   [2:0] HSIZES0;         <q-m>// Transfer size</q-m>
<a name="485"><q-n>     485  </q-n></a>    <q-w>wire</q-w>   [2:0] HBURSTS0;        <q-m>// Burst type</q-m>
<a name="486"><q-n>     486  </q-n></a>    <q-w>wire</q-w>   [3:0] HPROTS0;         <q-m>// Protection control</q-m>
<a name="487"><q-n>     487  </q-n></a>    <q-w>wire</q-w>   [3:0] HMASTERS0;       <q-m>// Master select</q-m>
<a name="488"><q-n>     488  </q-n></a>    <q-w>wire</q-w>  [31:0] HWDATAS0;        <q-m>// Write data</q-m>
<a name="489"><q-n>     489  </q-n></a>    <q-w>wire</q-w>         HMASTLOCKS0;     <q-m>// Locked Sequence</q-m>
<a name="490"><q-n>     490  </q-n></a>    <q-w>wire</q-w>         HREADYS0;        <q-m>// Transfer done</q-m>
<a name="491"><q-n>     491  </q-n></a>
<a name="492"><q-n>     492  </q-n></a>    <q-w>wire</q-w>  [31:0] HRDATAS0;        <q-m>// Read data bus</q-m>
<a name="493"><q-n>     493  </q-n></a>    <q-w>wire</q-w>         HREADYOUTS0;     <q-m>// HREADY feedback</q-m>
<a name="494"><q-n>     494  </q-n></a>    <q-w>wire</q-w>   [1:0] HRESPS0;         <q-m>// Transfer response</q-m>
<a name="495"><q-n>     495  </q-n></a>    <q-w>wire</q-w>  [31:0] HAUSERS0;        <q-m>// Address USER signals</q-m>
<a name="496"><q-n>     496  </q-n></a>    <q-w>wire</q-w>  [31:0] HWUSERS0;        <q-m>// Write-data USER signals</q-m>
<a name="497"><q-n>     497  </q-n></a>    <q-w>wire</q-w>  [31:0] HRUSERS0;        <q-m>// Read-data USER signals</q-m>
<a name="498"><q-n>     498  </q-n></a>
<a name="499"><q-n>     499  </q-n></a>    <q-m>// Input Port SI1</q-m>
<a name="500"><q-n>     500  </q-n></a>    <q-w>wire</q-w>         HSELS1;          <q-m>// Slave Select</q-m>
<a name="501"><q-n>     501  </q-n></a>    <q-w>wire</q-w>  [31:0] HADDRS1;         <q-m>// Address bus</q-m>
<a name="502"><q-n>     502  </q-n></a>    <q-w>wire</q-w>   [1:0] HTRANSS1;        <q-m>// Transfer type</q-m>
<a name="503"><q-n>     503  </q-n></a>    <q-w>wire</q-w>         HWRITES1;        <q-m>// Transfer direction</q-m>
<a name="504"><q-n>     504  </q-n></a>    <q-w>wire</q-w>   [2:0] HSIZES1;         <q-m>// Transfer size</q-m>
<a name="505"><q-n>     505  </q-n></a>    <q-w>wire</q-w>   [2:0] HBURSTS1;        <q-m>// Burst type</q-m>
<a name="506"><q-n>     506  </q-n></a>    <q-w>wire</q-w>   [3:0] HPROTS1;         <q-m>// Protection control</q-m>
<a name="507"><q-n>     507  </q-n></a>    <q-w>wire</q-w>   [3:0] HMASTERS1;       <q-m>// Master select</q-m>
<a name="508"><q-n>     508  </q-n></a>    <q-w>wire</q-w>  [31:0] HWDATAS1;        <q-m>// Write data</q-m>
<a name="509"><q-n>     509  </q-n></a>    <q-w>wire</q-w>         HMASTLOCKS1;     <q-m>// Locked Sequence</q-m>
<a name="510"><q-n>     510  </q-n></a>    <q-w>wire</q-w>         HREADYS1;        <q-m>// Transfer done</q-m>
<a name="511"><q-n>     511  </q-n></a>
<a name="512"><q-n>     512  </q-n></a>    <q-w>wire</q-w>  [31:0] HRDATAS1;        <q-m>// Read data bus</q-m>
<a name="513"><q-n>     513  </q-n></a>    <q-w>wire</q-w>         HREADYOUTS1;     <q-m>// HREADY feedback</q-m>
<a name="514"><q-n>     514  </q-n></a>    <q-w>wire</q-w>   [1:0] HRESPS1;         <q-m>// Transfer response</q-m>
<a name="515"><q-n>     515  </q-n></a>    <q-w>wire</q-w>  [31:0] HAUSERS1;        <q-m>// Address USER signals</q-m>
<a name="516"><q-n>     516  </q-n></a>    <q-w>wire</q-w>  [31:0] HWUSERS1;        <q-m>// Write-data USER signals</q-m>
<a name="517"><q-n>     517  </q-n></a>    <q-w>wire</q-w>  [31:0] HRUSERS1;        <q-m>// Read-data USER signals</q-m>
<a name="518"><q-n>     518  </q-n></a>
<a name="519"><q-n>     519  </q-n></a>    <q-m>// Input Port SI2</q-m>
<a name="520"><q-n>     520  </q-n></a>    <q-w>wire</q-w>         HSELS3;          <q-m>// Slave Select</q-m>
<a name="521"><q-n>     521  </q-n></a>    <q-w>wire</q-w>  [31:0] HADDRS3;         <q-m>// Address bus</q-m>
<a name="522"><q-n>     522  </q-n></a>    <q-w>wire</q-w>   [1:0] HTRANSS3;        <q-m>// Transfer type</q-m>
<a name="523"><q-n>     523  </q-n></a>    <q-w>wire</q-w>         HWRITES3;        <q-m>// Transfer direction</q-m>
<a name="524"><q-n>     524  </q-n></a>    <q-w>wire</q-w>   [2:0] HSIZES3;         <q-m>// Transfer size</q-m>
<a name="525"><q-n>     525  </q-n></a>    <q-w>wire</q-w>   [2:0] HBURSTS3;        <q-m>// Burst type</q-m>
<a name="526"><q-n>     526  </q-n></a>    <q-w>wire</q-w>   [3:0] HPROTS3;         <q-m>// Protection control</q-m>
<a name="527"><q-n>     527  </q-n></a>    <q-w>wire</q-w>   [3:0] HMASTERS3;       <q-m>// Master select</q-m>
<a name="528"><q-n>     528  </q-n></a>    <q-w>wire</q-w>  [31:0] HWDATAS3;        <q-m>// Write data</q-m>
<a name="529"><q-n>     529  </q-n></a>    <q-w>wire</q-w>         HMASTLOCKS3;     <q-m>// Locked Sequence</q-m>
<a name="530"><q-n>     530  </q-n></a>    <q-w>wire</q-w>         HREADYS3;        <q-m>// Transfer done</q-m>
<a name="531"><q-n>     531  </q-n></a>
<a name="532"><q-n>     532  </q-n></a>    <q-w>wire</q-w>  [31:0] HRDATAS3;        <q-m>// Read data bus</q-m>
<a name="533"><q-n>     533  </q-n></a>    <q-w>wire</q-w>         HREADYOUTS3;     <q-m>// HREADY feedback</q-m>
<a name="534"><q-n>     534  </q-n></a>    <q-w>wire</q-w>   [1:0] HRESPS3;         <q-m>// Transfer response</q-m>
<a name="535"><q-n>     535  </q-n></a>    <q-w>wire</q-w>  [31:0] HAUSERS3;        <q-m>// Address USER signals</q-m>
<a name="536"><q-n>     536  </q-n></a>    <q-w>wire</q-w>  [31:0] HWUSERS3;        <q-m>// Write-data USER signals</q-m>
<a name="537"><q-n>     537  </q-n></a>    <q-w>wire</q-w>  [31:0] HRUSERS3;        <q-m>// Read-data USER signals</q-m>
<a name="538"><q-n>     538  </q-n></a>
<a name="539"><q-n>     539  </q-n></a>    <q-m>// Input Port SI3</q-m>
<a name="540"><q-n>     540  </q-n></a>    <q-w>wire</q-w>         HSELS4;          <q-m>// Slave Select</q-m>
<a name="541"><q-n>     541  </q-n></a>    <q-w>wire</q-w>  [31:0] HADDRS4;         <q-m>// Address bus</q-m>
<a name="542"><q-n>     542  </q-n></a>    <q-w>wire</q-w>   [1:0] HTRANSS4;        <q-m>// Transfer type</q-m>
<a name="543"><q-n>     543  </q-n></a>    <q-w>wire</q-w>         HWRITES4;        <q-m>// Transfer direction</q-m>
<a name="544"><q-n>     544  </q-n></a>    <q-w>wire</q-w>   [2:0] HSIZES4;         <q-m>// Transfer size</q-m>
<a name="545"><q-n>     545  </q-n></a>    <q-w>wire</q-w>   [2:0] HBURSTS4;        <q-m>// Burst type</q-m>
<a name="546"><q-n>     546  </q-n></a>    <q-w>wire</q-w>   [3:0] HPROTS4;         <q-m>// Protection control</q-m>
<a name="547"><q-n>     547  </q-n></a>    <q-w>wire</q-w>   [3:0] HMASTERS4;       <q-m>// Master select</q-m>
<a name="548"><q-n>     548  </q-n></a>    <q-w>wire</q-w>  [31:0] HWDATAS4;        <q-m>// Write data</q-m>
<a name="549"><q-n>     549  </q-n></a>    <q-w>wire</q-w>         HMASTLOCKS4;     <q-m>// Locked Sequence</q-m>
<a name="550"><q-n>     550  </q-n></a>    <q-w>wire</q-w>         HREADYS4;        <q-m>// Transfer done</q-m>
<a name="551"><q-n>     551  </q-n></a>
<a name="552"><q-n>     552  </q-n></a>    <q-w>wire</q-w>  [31:0] HRDATAS4;        <q-m>// Read data bus</q-m>
<a name="553"><q-n>     553  </q-n></a>    <q-w>wire</q-w>         HREADYOUTS4;     <q-m>// HREADY feedback</q-m>
<a name="554"><q-n>     554  </q-n></a>    <q-w>wire</q-w>   [1:0] HRESPS4;         <q-m>// Transfer response</q-m>
<a name="555"><q-n>     555  </q-n></a>    <q-w>wire</q-w>  [31:0] HAUSERS4;        <q-m>// Address USER signals</q-m>
<a name="556"><q-n>     556  </q-n></a>    <q-w>wire</q-w>  [31:0] HWUSERS4;        <q-m>// Write-data USER signals</q-m>
<a name="557"><q-n>     557  </q-n></a>    <q-w>wire</q-w>  [31:0] HRUSERS4;        <q-m>// Read-data USER signals</q-m>
<a name="558"><q-n>     558  </q-n></a>
<a name="559"><q-n>     559  </q-n></a>    <q-m>// Input Port SI4</q-m>
<a name="560"><q-n>     560  </q-n></a>    <q-w>wire</q-w>         HSELS5;          <q-m>// Slave Select</q-m>
<a name="561"><q-n>     561  </q-n></a>    <q-w>wire</q-w>  [31:0] HADDRS5;         <q-m>// Address bus</q-m>
<a name="562"><q-n>     562  </q-n></a>    <q-w>wire</q-w>   [1:0] HTRANSS5;        <q-m>// Transfer type</q-m>
<a name="563"><q-n>     563  </q-n></a>    <q-w>wire</q-w>         HWRITES5;        <q-m>// Transfer direction</q-m>
<a name="564"><q-n>     564  </q-n></a>    <q-w>wire</q-w>   [2:0] HSIZES5;         <q-m>// Transfer size</q-m>
<a name="565"><q-n>     565  </q-n></a>    <q-w>wire</q-w>   [2:0] HBURSTS5;        <q-m>// Burst type</q-m>
<a name="566"><q-n>     566  </q-n></a>    <q-w>wire</q-w>   [3:0] HPROTS5;         <q-m>// Protection control</q-m>
<a name="567"><q-n>     567  </q-n></a>    <q-w>wire</q-w>   [3:0] HMASTERS5;       <q-m>// Master select</q-m>
<a name="568"><q-n>     568  </q-n></a>    <q-w>wire</q-w>  [31:0] HWDATAS5;        <q-m>// Write data</q-m>
<a name="569"><q-n>     569  </q-n></a>    <q-w>wire</q-w>         HMASTLOCKS5;     <q-m>// Locked Sequence</q-m>
<a name="570"><q-n>     570  </q-n></a>    <q-w>wire</q-w>         HREADYS5;        <q-m>// Transfer done</q-m>
<a name="571"><q-n>     571  </q-n></a>
<a name="572"><q-n>     572  </q-n></a>    <q-w>wire</q-w>  [31:0] HRDATAS5;        <q-m>// Read data bus</q-m>
<a name="573"><q-n>     573  </q-n></a>    <q-w>wire</q-w>         HREADYOUTS5;     <q-m>// HREADY feedback</q-m>
<a name="574"><q-n>     574  </q-n></a>    <q-w>wire</q-w>   [1:0] HRESPS5;         <q-m>// Transfer response</q-m>
<a name="575"><q-n>     575  </q-n></a>    <q-w>wire</q-w>  [31:0] HAUSERS5;        <q-m>// Address USER signals</q-m>
<a name="576"><q-n>     576  </q-n></a>    <q-w>wire</q-w>  [31:0] HWUSERS5;        <q-m>// Write-data USER signals</q-m>
<a name="577"><q-n>     577  </q-n></a>    <q-w>wire</q-w>  [31:0] HRUSERS5;        <q-m>// Read-data USER signals</q-m>
<a name="578"><q-n>     578  </q-n></a>
<a name="579"><q-n>     579  </q-n></a>    <q-m>// Output Port MI0</q-m>
<a name="580"><q-n>     580  </q-n></a>    <q-w>wire</q-w>         HSELM0;          <q-m>// Slave Select</q-m>
<a name="581"><q-n>     581  </q-n></a>    <q-w>wire</q-w>  [31:0] HADDRM0;         <q-m>// Address bus</q-m>
<a name="582"><q-n>     582  </q-n></a>    <q-w>wire</q-w>   [1:0] HTRANSM0;        <q-m>// Transfer type</q-m>
<a name="583"><q-n>     583  </q-n></a>    <q-w>wire</q-w>         HWRITEM0;        <q-m>// Transfer direction</q-m>
<a name="584"><q-n>     584  </q-n></a>    <q-w>wire</q-w>   [2:0] HSIZEM0;         <q-m>// Transfer size</q-m>
<a name="585"><q-n>     585  </q-n></a>    <q-w>wire</q-w>   [2:0] HBURSTM0;        <q-m>// Burst type</q-m>
<a name="586"><q-n>     586  </q-n></a>    <q-w>wire</q-w>   [3:0] HPROTM0;         <q-m>// Protection control</q-m>
<a name="587"><q-n>     587  </q-n></a>    <q-w>wire</q-w>   [3:0] HMASTERM0;       <q-m>// Master select</q-m>
<a name="588"><q-n>     588  </q-n></a>    <q-w>wire</q-w>  [31:0] HWDATAM0;        <q-m>// Write data</q-m>
<a name="589"><q-n>     589  </q-n></a>    <q-w>wire</q-w>         HMASTLOCKM0;     <q-m>// Locked Sequence</q-m>
<a name="590"><q-n>     590  </q-n></a>    <q-w>wire</q-w>         HREADYMUXM0;     <q-m>// Transfer done</q-m>
<a name="591"><q-n>     591  </q-n></a>
<a name="592"><q-n>     592  </q-n></a>    <q-w>wire</q-w>  [31:0] HRDATAM0;        <q-m>// Read data bus</q-m>
<a name="593"><q-n>     593  </q-n></a>    <q-w>wire</q-w>         HREADYOUTM0;     <q-m>// HREADY feedback</q-m>
<a name="594"><q-n>     594  </q-n></a>    <q-w>wire</q-w>   [1:0] HRESPM0;         <q-m>// Transfer response</q-m>
<a name="595"><q-n>     595  </q-n></a>    <q-w>wire</q-w>  [31:0] HAUSERM0;        <q-m>// Address USER signals</q-m>
<a name="596"><q-n>     596  </q-n></a>    <q-w>wire</q-w>  [31:0] HWUSERM0;        <q-m>// Write-data USER signals</q-m>
<a name="597"><q-n>     597  </q-n></a>    <q-w>wire</q-w>  [31:0] HRUSERM0;        <q-m>// Read-data USER signals</q-m>
<a name="598"><q-n>     598  </q-n></a>
<a name="599"><q-n>     599  </q-n></a>    <q-m>// Output Port MI1</q-m>
<a name="600"><q-n>     600  </q-n></a>    <q-w>wire</q-w>         HSELM1;          <q-m>// Slave Select</q-m>
<a name="601"><q-n>     601  </q-n></a>    <q-w>wire</q-w>  [31:0] HADDRM1;         <q-m>// Address bus</q-m>
<a name="602"><q-n>     602  </q-n></a>    <q-w>wire</q-w>   [1:0] HTRANSM1;        <q-m>// Transfer type</q-m>
<a name="603"><q-n>     603  </q-n></a>    <q-w>wire</q-w>         HWRITEM1;        <q-m>// Transfer direction</q-m>
<a name="604"><q-n>     604  </q-n></a>    <q-w>wire</q-w>   [2:0] HSIZEM1;         <q-m>// Transfer size</q-m>
<a name="605"><q-n>     605  </q-n></a>    <q-w>wire</q-w>   [2:0] HBURSTM1;        <q-m>// Burst type</q-m>
<a name="606"><q-n>     606  </q-n></a>    <q-w>wire</q-w>   [3:0] HPROTM1;         <q-m>// Protection control</q-m>
<a name="607"><q-n>     607  </q-n></a>    <q-w>wire</q-w>   [3:0] HMASTERM1;       <q-m>// Master select</q-m>
<a name="608"><q-n>     608  </q-n></a>    <q-w>wire</q-w>  [31:0] HWDATAM1;        <q-m>// Write data</q-m>
<a name="609"><q-n>     609  </q-n></a>    <q-w>wire</q-w>         HMASTLOCKM1;     <q-m>// Locked Sequence</q-m>
<a name="610"><q-n>     610  </q-n></a>    <q-w>wire</q-w>         HREADYMUXM1;     <q-m>// Transfer done</q-m>
<a name="611"><q-n>     611  </q-n></a>
<a name="612"><q-n>     612  </q-n></a>    <q-w>wire</q-w>  [31:0] HRDATAM1;        <q-m>// Read data bus</q-m>
<a name="613"><q-n>     613  </q-n></a>    <q-w>wire</q-w>         HREADYOUTM1;     <q-m>// HREADY feedback</q-m>
<a name="614"><q-n>     614  </q-n></a>    <q-w>wire</q-w>   [1:0] HRESPM1;         <q-m>// Transfer response</q-m>
<a name="615"><q-n>     615  </q-n></a>    <q-w>wire</q-w>  [31:0] HAUSERM1;        <q-m>// Address USER signals</q-m>
<a name="616"><q-n>     616  </q-n></a>    <q-w>wire</q-w>  [31:0] HWUSERM1;        <q-m>// Write-data USER signals</q-m>
<a name="617"><q-n>     617  </q-n></a>    <q-w>wire</q-w>  [31:0] HRUSERM1;        <q-m>// Read-data USER signals</q-m>
<a name="618"><q-n>     618  </q-n></a>
<a name="619"><q-n>     619  </q-n></a>    <q-m>// Output Port MI2</q-m>
<a name="620"><q-n>     620  </q-n></a>    <q-w>wire</q-w>         HSELM2;          <q-m>// Slave Select</q-m>
<a name="621"><q-n>     621  </q-n></a>    <q-w>wire</q-w>  [31:0] HADDRM2;         <q-m>// Address bus</q-m>
<a name="622"><q-n>     622  </q-n></a>    <q-w>wire</q-w>   [1:0] HTRANSM2;        <q-m>// Transfer type</q-m>
<a name="623"><q-n>     623  </q-n></a>    <q-w>wire</q-w>         HWRITEM2;        <q-m>// Transfer direction</q-m>
<a name="624"><q-n>     624  </q-n></a>    <q-w>wire</q-w>   [2:0] HSIZEM2;         <q-m>// Transfer size</q-m>
<a name="625"><q-n>     625  </q-n></a>    <q-w>wire</q-w>   [2:0] HBURSTM2;        <q-m>// Burst type</q-m>
<a name="626"><q-n>     626  </q-n></a>    <q-w>wire</q-w>   [3:0] HPROTM2;         <q-m>// Protection control</q-m>
<a name="627"><q-n>     627  </q-n></a>    <q-w>wire</q-w>   [3:0] HMASTERM2;       <q-m>// Master select</q-m>
<a name="628"><q-n>     628  </q-n></a>    <q-w>wire</q-w>  [31:0] HWDATAM2;        <q-m>// Write data</q-m>
<a name="629"><q-n>     629  </q-n></a>    <q-w>wire</q-w>         HMASTLOCKM2;     <q-m>// Locked Sequence</q-m>
<a name="630"><q-n>     630  </q-n></a>    <q-w>wire</q-w>         HREADYMUXM2;     <q-m>// Transfer done</q-m>
<a name="631"><q-n>     631  </q-n></a>
<a name="632"><q-n>     632  </q-n></a>    <q-w>wire</q-w>  [31:0] HRDATAM2;        <q-m>// Read data bus</q-m>
<a name="633"><q-n>     633  </q-n></a>    <q-w>wire</q-w>         HREADYOUTM2;     <q-m>// HREADY feedback</q-m>
<a name="634"><q-n>     634  </q-n></a>    <q-w>wire</q-w>   [1:0] HRESPM2;         <q-m>// Transfer response</q-m>
<a name="635"><q-n>     635  </q-n></a>    <q-w>wire</q-w>  [31:0] HAUSERM2;        <q-m>// Address USER signals</q-m>
<a name="636"><q-n>     636  </q-n></a>    <q-w>wire</q-w>  [31:0] HWUSERM2;        <q-m>// Write-data USER signals</q-m>
<a name="637"><q-n>     637  </q-n></a>    <q-w>wire</q-w>  [31:0] HRUSERM2;        <q-m>// Read-data USER signals</q-m>
<a name="638"><q-n>     638  </q-n></a>
<a name="639"><q-n>     639  </q-n></a>    <q-m>// Output Port MI3</q-m>
<a name="640"><q-n>     640  </q-n></a>    <q-w>wire</q-w>         HSELM3;          <q-m>// Slave Select</q-m>
<a name="641"><q-n>     641  </q-n></a>    <q-w>wire</q-w>  [31:0] HADDRM3;         <q-m>// Address bus</q-m>
<a name="642"><q-n>     642  </q-n></a>    <q-w>wire</q-w>   [1:0] HTRANSM3;        <q-m>// Transfer type</q-m>
<a name="643"><q-n>     643  </q-n></a>    <q-w>wire</q-w>         HWRITEM3;        <q-m>// Transfer direction</q-m>
<a name="644"><q-n>     644  </q-n></a>    <q-w>wire</q-w>   [2:0] HSIZEM3;         <q-m>// Transfer size</q-m>
<a name="645"><q-n>     645  </q-n></a>    <q-w>wire</q-w>   [2:0] HBURSTM3;        <q-m>// Burst type</q-m>
<a name="646"><q-n>     646  </q-n></a>    <q-w>wire</q-w>   [3:0] HPROTM3;         <q-m>// Protection control</q-m>
<a name="647"><q-n>     647  </q-n></a>    <q-w>wire</q-w>   [3:0] HMASTERM3;       <q-m>// Master select</q-m>
<a name="648"><q-n>     648  </q-n></a>    <q-w>wire</q-w>  [31:0] HWDATAM3;        <q-m>// Write data</q-m>
<a name="649"><q-n>     649  </q-n></a>    <q-w>wire</q-w>         HMASTLOCKM3;     <q-m>// Locked Sequence</q-m>
<a name="650"><q-n>     650  </q-n></a>    <q-w>wire</q-w>         HREADYMUXM3;     <q-m>// Transfer done</q-m>
<a name="651"><q-n>     651  </q-n></a>
<a name="652"><q-n>     652  </q-n></a>    <q-w>wire</q-w>  [31:0] HRDATAM3;        <q-m>// Read data bus</q-m>
<a name="653"><q-n>     653  </q-n></a>    <q-w>wire</q-w>         HREADYOUTM3;     <q-m>// HREADY feedback</q-m>
<a name="654"><q-n>     654  </q-n></a>    <q-w>wire</q-w>   [1:0] HRESPM3;         <q-m>// Transfer response</q-m>
<a name="655"><q-n>     655  </q-n></a>    <q-w>wire</q-w>  [31:0] HAUSERM3;        <q-m>// Address USER signals</q-m>
<a name="656"><q-n>     656  </q-n></a>    <q-w>wire</q-w>  [31:0] HWUSERM3;        <q-m>// Write-data USER signals</q-m>
<a name="657"><q-n>     657  </q-n></a>    <q-w>wire</q-w>  [31:0] HRUSERM3;        <q-m>// Read-data USER signals</q-m>
<a name="658"><q-n>     658  </q-n></a>
<a name="659"><q-n>     659  </q-n></a>
<a name="660"><q-n>     660  </q-n></a><q-m>// -----------------------------------------------------------------------------</q-m>
<a name="661"><q-n>     661  </q-n></a><q-m>// Signal declarations</q-m>
<a name="662"><q-n>     662  </q-n></a><q-m>// -----------------------------------------------------------------------------</q-m>
<a name="663"><q-n>     663  </q-n></a>
<a name="664"><q-n>     664  </q-n></a>    <q-m>// Bus-switch input SI0</q-m>
<a name="665"><q-n>     665  </q-n></a>    <q-w>wire</q-w>         i_sel0;            <q-m>// HSEL signal</q-m>
<a name="666"><q-n>     666  </q-n></a>    <q-w>wire</q-w>  [31:0] i_addr0;           <q-m>// HADDR signal</q-m>
<a name="667"><q-n>     667  </q-n></a>    <q-w>wire</q-w>   [1:0] i_trans0;          <q-m>// HTRANS signal</q-m>
<a name="668"><q-n>     668  </q-n></a>    <q-w>wire</q-w>         i_write0;          <q-m>// HWRITE signal</q-m>
<a name="669"><q-n>     669  </q-n></a>    <q-w>wire</q-w>   [2:0] i_size0;           <q-m>// HSIZE signal</q-m>
<a name="670"><q-n>     670  </q-n></a>    <q-w>wire</q-w>   [2:0] i_burst0;          <q-m>// HBURST signal</q-m>
<a name="671"><q-n>     671  </q-n></a>    <q-w>wire</q-w>   [3:0] i_prot0;           <q-m>// HPROTS signal</q-m>
<a name="672"><q-n>     672  </q-n></a>    <q-w>wire</q-w>   [3:0] i_master0;         <q-m>// HMASTER signal</q-m>
<a name="673"><q-n>     673  </q-n></a>    <q-w>wire</q-w>         i_mastlock0;       <q-m>// HMASTLOCK signal</q-m>
<a name="674"><q-n>     674  </q-n></a>    <q-w>wire</q-w>         i_active0;         <q-m>// Active signal</q-m>
<a name="675"><q-n>     675  </q-n></a>    <q-w>wire</q-w>         i_held_tran0;       <q-m>// HeldTran signal</q-m>
<a name="676"><q-n>     676  </q-n></a>    <q-w>wire</q-w>         i_readyout0;       <q-m>// Readyout signal</q-m>
<a name="677"><q-n>     677  </q-n></a>    <q-w>wire</q-w>   [1:0] i_resp0;           <q-m>// Response signal</q-m>
<a name="678"><q-n>     678  </q-n></a>    <q-w>wire</q-w>  [31:0] i_auser0;          <q-m>// HAUSER signal</q-m>
<a name="679"><q-n>     679  </q-n></a>
<a name="680"><q-n>     680  </q-n></a>    <q-m>// Bus-switch input SI1</q-m>
<a name="681"><q-n>     681  </q-n></a>    <q-w>wire</q-w>         i_sel1;            <q-m>// HSEL signal</q-m>
<a name="682"><q-n>     682  </q-n></a>    <q-w>wire</q-w>  [31:0] i_addr1;           <q-m>// HADDR signal</q-m>
<a name="683"><q-n>     683  </q-n></a>    <q-w>wire</q-w>   [1:0] i_trans1;          <q-m>// HTRANS signal</q-m>
<a name="684"><q-n>     684  </q-n></a>    <q-w>wire</q-w>         i_write1;          <q-m>// HWRITE signal</q-m>
<a name="685"><q-n>     685  </q-n></a>    <q-w>wire</q-w>   [2:0] i_size1;           <q-m>// HSIZE signal</q-m>
<a name="686"><q-n>     686  </q-n></a>    <q-w>wire</q-w>   [2:0] i_burst1;          <q-m>// HBURST signal</q-m>
<a name="687"><q-n>     687  </q-n></a>    <q-w>wire</q-w>   [3:0] i_prot1;           <q-m>// HPROTS signal</q-m>
<a name="688"><q-n>     688  </q-n></a>    <q-w>wire</q-w>   [3:0] i_master1;         <q-m>// HMASTER signal</q-m>
<a name="689"><q-n>     689  </q-n></a>    <q-w>wire</q-w>         i_mastlock1;       <q-m>// HMASTLOCK signal</q-m>
<a name="690"><q-n>     690  </q-n></a>    <q-w>wire</q-w>         i_active1;         <q-m>// Active signal</q-m>
<a name="691"><q-n>     691  </q-n></a>    <q-w>wire</q-w>         i_held_tran1;       <q-m>// HeldTran signal</q-m>
<a name="692"><q-n>     692  </q-n></a>    <q-w>wire</q-w>         i_readyout1;       <q-m>// Readyout signal</q-m>
<a name="693"><q-n>     693  </q-n></a>    <q-w>wire</q-w>   [1:0] i_resp1;           <q-m>// Response signal</q-m>
<a name="694"><q-n>     694  </q-n></a>    <q-w>wire</q-w>  [31:0] i_auser1;          <q-m>// HAUSER signal</q-m>
<a name="695"><q-n>     695  </q-n></a>
<a name="696"><q-n>     696  </q-n></a>    <q-m>// Bus-switch input SI2</q-m>
<a name="697"><q-n>     697  </q-n></a>    <q-w>wire</q-w>         i_sel2;            <q-m>// HSEL signal</q-m>
<a name="698"><q-n>     698  </q-n></a>    <q-w>wire</q-w>  [31:0] i_addr2;           <q-m>// HADDR signal</q-m>
<a name="699"><q-n>     699  </q-n></a>    <q-w>wire</q-w>   [1:0] i_trans2;          <q-m>// HTRANS signal</q-m>
<a name="700"><q-n>     700  </q-n></a>    <q-w>wire</q-w>         i_write2;          <q-m>// HWRITE signal</q-m>
<a name="701"><q-n>     701  </q-n></a>    <q-w>wire</q-w>   [2:0] i_size2;           <q-m>// HSIZE signal</q-m>
<a name="702"><q-n>     702  </q-n></a>    <q-w>wire</q-w>   [2:0] i_burst2;          <q-m>// HBURST signal</q-m>
<a name="703"><q-n>     703  </q-n></a>    <q-w>wire</q-w>   [3:0] i_prot2;           <q-m>// HPROTS signal</q-m>
<a name="704"><q-n>     704  </q-n></a>    <q-w>wire</q-w>   [3:0] i_master2;         <q-m>// HMASTER signal</q-m>
<a name="705"><q-n>     705  </q-n></a>    <q-w>wire</q-w>         i_mastlock2;       <q-m>// HMASTLOCK signal</q-m>
<a name="706"><q-n>     706  </q-n></a>    <q-w>wire</q-w>         i_active2;         <q-m>// Active signal</q-m>
<a name="707"><q-n>     707  </q-n></a>    <q-w>wire</q-w>         i_held_tran2;       <q-m>// HeldTran signal</q-m>
<a name="708"><q-n>     708  </q-n></a>    <q-w>wire</q-w>         i_readyout2;       <q-m>// Readyout signal</q-m>
<a name="709"><q-n>     709  </q-n></a>    <q-w>wire</q-w>   [1:0] i_resp2;           <q-m>// Response signal</q-m>
<a name="710"><q-n>     710  </q-n></a>    <q-w>wire</q-w>  [31:0] i_auser2;          <q-m>// HAUSER signal</q-m>
<a name="711"><q-n>     711  </q-n></a>
<a name="712"><q-n>     712  </q-n></a>    <q-m>// Bus-switch input SI3</q-m>
<a name="713"><q-n>     713  </q-n></a>    <q-w>wire</q-w>         i_sel3;            <q-m>// HSEL signal</q-m>
<a name="714"><q-n>     714  </q-n></a>    <q-w>wire</q-w>  [31:0] i_addr3;           <q-m>// HADDR signal</q-m>
<a name="715"><q-n>     715  </q-n></a>    <q-w>wire</q-w>   [1:0] i_trans3;          <q-m>// HTRANS signal</q-m>
<a name="716"><q-n>     716  </q-n></a>    <q-w>wire</q-w>         i_write3;          <q-m>// HWRITE signal</q-m>
<a name="717"><q-n>     717  </q-n></a>    <q-w>wire</q-w>   [2:0] i_size3;           <q-m>// HSIZE signal</q-m>
<a name="718"><q-n>     718  </q-n></a>    <q-w>wire</q-w>   [2:0] i_burst3;          <q-m>// HBURST signal</q-m>
<a name="719"><q-n>     719  </q-n></a>    <q-w>wire</q-w>   [3:0] i_prot3;           <q-m>// HPROTS signal</q-m>
<a name="720"><q-n>     720  </q-n></a>    <q-w>wire</q-w>   [3:0] i_master3;         <q-m>// HMASTER signal</q-m>
<a name="721"><q-n>     721  </q-n></a>    <q-w>wire</q-w>         i_mastlock3;       <q-m>// HMASTLOCK signal</q-m>
<a name="722"><q-n>     722  </q-n></a>    <q-w>wire</q-w>         i_active3;         <q-m>// Active signal</q-m>
<a name="723"><q-n>     723  </q-n></a>    <q-w>wire</q-w>         i_held_tran3;       <q-m>// HeldTran signal</q-m>
<a name="724"><q-n>     724  </q-n></a>    <q-w>wire</q-w>         i_readyout3;       <q-m>// Readyout signal</q-m>
<a name="725"><q-n>     725  </q-n></a>    <q-w>wire</q-w>   [1:0] i_resp3;           <q-m>// Response signal</q-m>
<a name="726"><q-n>     726  </q-n></a>    <q-w>wire</q-w>  [31:0] i_auser3;          <q-m>// HAUSER signal</q-m>
<a name="727"><q-n>     727  </q-n></a>
<a name="728"><q-n>     728  </q-n></a>    <q-m>// Bus-switch input SI4</q-m>
<a name="729"><q-n>     729  </q-n></a>    <q-w>wire</q-w>         i_sel4;            <q-m>// HSEL signal</q-m>
<a name="730"><q-n>     730  </q-n></a>    <q-w>wire</q-w>  [31:0] i_addr4;           <q-m>// HADDR signal</q-m>
<a name="731"><q-n>     731  </q-n></a>    <q-w>wire</q-w>   [1:0] i_trans4;          <q-m>// HTRANS signal</q-m>
<a name="732"><q-n>     732  </q-n></a>    <q-w>wire</q-w>         i_write4;          <q-m>// HWRITE signal</q-m>
<a name="733"><q-n>     733  </q-n></a>    <q-w>wire</q-w>   [2:0] i_size4;           <q-m>// HSIZE signal</q-m>
<a name="734"><q-n>     734  </q-n></a>    <q-w>wire</q-w>   [2:0] i_burst4;          <q-m>// HBURST signal</q-m>
<a name="735"><q-n>     735  </q-n></a>    <q-w>wire</q-w>   [3:0] i_prot4;           <q-m>// HPROTS signal</q-m>
<a name="736"><q-n>     736  </q-n></a>    <q-w>wire</q-w>   [3:0] i_master4;         <q-m>// HMASTER signal</q-m>
<a name="737"><q-n>     737  </q-n></a>    <q-w>wire</q-w>         i_mastlock4;       <q-m>// HMASTLOCK signal</q-m>
<a name="738"><q-n>     738  </q-n></a>    <q-w>wire</q-w>         i_active4;         <q-m>// Active signal</q-m>
<a name="739"><q-n>     739  </q-n></a>    <q-w>wire</q-w>         i_held_tran4;       <q-m>// HeldTran signal</q-m>
<a name="740"><q-n>     740  </q-n></a>    <q-w>wire</q-w>         i_readyout4;       <q-m>// Readyout signal</q-m>
<a name="741"><q-n>     741  </q-n></a>    <q-w>wire</q-w>   [1:0] i_resp4;           <q-m>// Response signal</q-m>
<a name="742"><q-n>     742  </q-n></a>    <q-w>wire</q-w>  [31:0] i_auser4;          <q-m>// HAUSER signal</q-m>
<a name="743"><q-n>     743  </q-n></a>
<a name="744"><q-n>     744  </q-n></a>    <q-m>// Bus-switch SI0 to MI0 signals</q-m>
<a name="745"><q-n>     745  </q-n></a>    <q-w>wire</q-w>         i_sel0to0;         <q-m>// Routing selection signal</q-m>
<a name="746"><q-n>     746  </q-n></a>    <q-w>wire</q-w>         i_active0to0;      <q-m>// Active signal</q-m>
<a name="747"><q-n>     747  </q-n></a>
<a name="748"><q-n>     748  </q-n></a>    <q-m>// Bus-switch SI0 to MI1 signals</q-m>
<a name="749"><q-n>     749  </q-n></a>    <q-w>wire</q-w>         i_sel0to1;         <q-m>// Routing selection signal</q-m>
<a name="750"><q-n>     750  </q-n></a>    <q-w>wire</q-w>         i_active0to1;      <q-m>// Active signal</q-m>
<a name="751"><q-n>     751  </q-n></a>
<a name="752"><q-n>     752  </q-n></a>    <q-m>// Bus-switch SI1 to MI0 signals</q-m>
<a name="753"><q-n>     753  </q-n></a>    <q-w>wire</q-w>         i_sel1to0;         <q-m>// Routing selection signal</q-m>
<a name="754"><q-n>     754  </q-n></a>    <q-w>wire</q-w>         i_active1to0;      <q-m>// Active signal</q-m>
<a name="755"><q-n>     755  </q-n></a>
<a name="756"><q-n>     756  </q-n></a>    <q-m>// Bus-switch SI1 to MI1 signals</q-m>
<a name="757"><q-n>     757  </q-n></a>    <q-w>wire</q-w>         i_sel1to1;         <q-m>// Routing selection signal</q-m>
<a name="758"><q-n>     758  </q-n></a>    <q-w>wire</q-w>         i_active1to1;      <q-m>// Active signal</q-m>
<a name="759"><q-n>     759  </q-n></a>
<a name="760"><q-n>     760  </q-n></a>    <q-m>// Bus-switch SI2 to MI2 signals</q-m>
<a name="761"><q-n>     761  </q-n></a>    <q-w>wire</q-w>         i_sel2to2;         <q-m>// Routing selection signal</q-m>
<a name="762"><q-n>     762  </q-n></a>    <q-w>wire</q-w>         i_active2to2;      <q-m>// Active signal</q-m>
<a name="763"><q-n>     763  </q-n></a>
<a name="764"><q-n>     764  </q-n></a>    <q-m>// Bus-switch SI2 to MI3 signals</q-m>
<a name="765"><q-n>     765  </q-n></a>    <q-w>wire</q-w>         i_sel2to3;         <q-m>// Routing selection signal</q-m>
<a name="766"><q-n>     766  </q-n></a>    <q-w>wire</q-w>         i_active2to3;      <q-m>// Active signal</q-m>
<a name="767"><q-n>     767  </q-n></a>
<a name="768"><q-n>     768  </q-n></a>    <q-m>// Bus-switch SI3 to MI0 signals</q-m>
<a name="769"><q-n>     769  </q-n></a>    <q-w>wire</q-w>         i_sel3to0;         <q-m>// Routing selection signal</q-m>
<a name="770"><q-n>     770  </q-n></a>    <q-w>wire</q-w>         i_active3to0;      <q-m>// Active signal</q-m>
<a name="771"><q-n>     771  </q-n></a>
<a name="772"><q-n>     772  </q-n></a>    <q-m>// Bus-switch SI3 to MI1 signals</q-m>
<a name="773"><q-n>     773  </q-n></a>    <q-w>wire</q-w>         i_sel3to1;         <q-m>// Routing selection signal</q-m>
<a name="774"><q-n>     774  </q-n></a>    <q-w>wire</q-w>         i_active3to1;      <q-m>// Active signal</q-m>
<a name="775"><q-n>     775  </q-n></a>
<a name="776"><q-n>     776  </q-n></a>    <q-m>// Bus-switch SI3 to MI2 signals</q-m>
<a name="777"><q-n>     777  </q-n></a>    <q-w>wire</q-w>         i_sel3to2;         <q-m>// Routing selection signal</q-m>
<a name="778"><q-n>     778  </q-n></a>    <q-w>wire</q-w>         i_active3to2;      <q-m>// Active signal</q-m>
<a name="779"><q-n>     779  </q-n></a>
<a name="780"><q-n>     780  </q-n></a>    <q-m>// Bus-switch SI4 to MI0 signals</q-m>
<a name="781"><q-n>     781  </q-n></a>    <q-w>wire</q-w>         i_sel4to0;         <q-m>// Routing selection signal</q-m>
<a name="782"><q-n>     782  </q-n></a>    <q-w>wire</q-w>         i_active4to0;      <q-m>// Active signal</q-m>
<a name="783"><q-n>     783  </q-n></a>
<a name="784"><q-n>     784  </q-n></a>    <q-m>// Bus-switch SI4 to MI1 signals</q-m>
<a name="785"><q-n>     785  </q-n></a>    <q-w>wire</q-w>         i_sel4to1;         <q-m>// Routing selection signal</q-m>
<a name="786"><q-n>     786  </q-n></a>    <q-w>wire</q-w>         i_active4to1;      <q-m>// Active signal</q-m>
<a name="787"><q-n>     787  </q-n></a>
<a name="788"><q-n>     788  </q-n></a>    <q-m>// Bus-switch SI4 to MI3 signals</q-m>
<a name="789"><q-n>     789  </q-n></a>    <q-w>wire</q-w>         i_sel4to3;         <q-m>// Routing selection signal</q-m>
<a name="790"><q-n>     790  </q-n></a>    <q-w>wire</q-w>         i_active4to3;      <q-m>// Active signal</q-m>
<a name="791"><q-n>     791  </q-n></a>
<a name="792"><q-n>     792  </q-n></a>    <q-w>wire</q-w>         i_hready_mux_m0;    <q-m>// Internal HREADYMUXM for MI0</q-m>
<a name="793"><q-n>     793  </q-n></a>    <q-w>wire</q-w>         i_hready_mux_m1;    <q-m>// Internal HREADYMUXM for MI1</q-m>
<a name="794"><q-n>     794  </q-n></a>    <q-w>wire</q-w>         i_hready_mux_m2;    <q-m>// Internal HREADYMUXM for MI2</q-m>
<a name="795"><q-n>     795  </q-n></a>    <q-w>wire</q-w>         i_hready_mux_m3;    <q-m>// Internal HREADYMUXM for MI3</q-m>
<a name="796"><q-n>     796  </q-n></a>
<a name="797"><q-n>     797  </q-n></a>
<a name="798"><q-n>     798  </q-n></a><q-m>// -----------------------------------------------------------------------------</q-m>
<a name="799"><q-n>     799  </q-n></a><q-m>// Beginning of main code</q-m>
<a name="800"><q-n>     800  </q-n></a><q-m>// -----------------------------------------------------------------------------</q-m>
<a name="801"><q-n>     801  </q-n></a>
<a name="802"><q-n>     802  </q-n></a>  <q-m>// Input stage for SI0</q-m>
<a name="803"><q-n>     803  </q-n></a>  cm3_in u_cm3_in_0 (
<a name="804"><q-n>     804  </q-n></a>
<a name="805"><q-n>     805  </q-n></a>    <q-m>// Common AHB signals</q-m>
<a name="806"><q-n>     806  </q-n></a>    .HCLK       (HCLK),
<a name="807"><q-n>     807  </q-n></a>    .HRESETn    (HRESETn),
<a name="808"><q-n>     808  </q-n></a>
<a name="809"><q-n>     809  </q-n></a>    <q-m>// Input Port Address/Control Signals</q-m>
<a name="810"><q-n>     810  </q-n></a>    .HSELS      (HSELS0),
<a name="811"><q-n>     811  </q-n></a>    .HADDRS     (HADDRS0),
<a name="812"><q-n>     812  </q-n></a>    .HTRANSS    (HTRANSS0),
<a name="813"><q-n>     813  </q-n></a>    .HWRITES    (HWRITES0),
<a name="814"><q-n>     814  </q-n></a>    .HSIZES     (HSIZES0),
<a name="815"><q-n>     815  </q-n></a>    .HBURSTS    (HBURSTS0),
<a name="816"><q-n>     816  </q-n></a>    .HPROTS     (HPROTS0),
<a name="817"><q-n>     817  </q-n></a>    .HMASTERS   (HMASTERS0),
<a name="818"><q-n>     818  </q-n></a>    .HMASTLOCKS (HMASTLOCKS0),
<a name="819"><q-n>     819  </q-n></a>    .HREADYS    (HREADYS0),
<a name="820"><q-n>     820  </q-n></a>    .HAUSERS    (HAUSERS0),
<a name="821"><q-n>     821  </q-n></a>
<a name="822"><q-n>     822  </q-n></a>    <q-m>// Internal Response</q-m>
<a name="823"><q-n>     823  </q-n></a>    .active_ip     (i_active0),
<a name="824"><q-n>     824  </q-n></a>    .readyout_ip   (i_readyout0),
<a name="825"><q-n>     825  </q-n></a>    .resp_ip       (i_resp0),
<a name="826"><q-n>     826  </q-n></a>
<a name="827"><q-n>     827  </q-n></a>    <q-m>// Input Port Response</q-m>
<a name="828"><q-n>     828  </q-n></a>    .HREADYOUTS (HREADYOUTS0),
<a name="829"><q-n>     829  </q-n></a>    .HRESPS     (HRESPS0),
<a name="830"><q-n>     830  </q-n></a>
<a name="831"><q-n>     831  </q-n></a>    <q-m>// Internal Address/Control Signals</q-m>
<a name="832"><q-n>     832  </q-n></a>    .sel_ip        (i_sel0),
<a name="833"><q-n>     833  </q-n></a>    .addr_ip       (i_addr0),
<a name="834"><q-n>     834  </q-n></a>    .auser_ip      (i_auser0),
<a name="835"><q-n>     835  </q-n></a>    .trans_ip      (i_trans0),
<a name="836"><q-n>     836  </q-n></a>    .write_ip      (i_write0),
<a name="837"><q-n>     837  </q-n></a>    .size_ip       (i_size0),
<a name="838"><q-n>     838  </q-n></a>    .burst_ip      (i_burst0),
<a name="839"><q-n>     839  </q-n></a>    .prot_ip       (i_prot0),
<a name="840"><q-n>     840  </q-n></a>    .master_ip     (i_master0),
<a name="841"><q-n>     841  </q-n></a>    .mastlock_ip   (i_mastlock0),
<a name="842"><q-n>     842  </q-n></a>    .held_tran_ip   (i_held_tran0)
<a name="843"><q-n>     843  </q-n></a>
<a name="844"><q-n>     844  </q-n></a>    );
<a name="845"><q-n>     845  </q-n></a>
<a name="846"><q-n>     846  </q-n></a>
<a name="847"><q-n>     847  </q-n></a>  <q-m>// Input stage for SI1</q-m>
<a name="848"><q-n>     848  </q-n></a>  cm3_in u_cm3_in_1 (
<a name="849"><q-n>     849  </q-n></a>
<a name="850"><q-n>     850  </q-n></a>    <q-m>// Common AHB signals</q-m>
<a name="851"><q-n>     851  </q-n></a>    .HCLK       (HCLK),
<a name="852"><q-n>     852  </q-n></a>    .HRESETn    (HRESETn),
<a name="853"><q-n>     853  </q-n></a>
<a name="854"><q-n>     854  </q-n></a>    <q-m>// Input Port Address/Control Signals</q-m>
<a name="855"><q-n>     855  </q-n></a>    .HSELS      (HSELS1),
<a name="856"><q-n>     856  </q-n></a>    .HADDRS     (HADDRS1),
<a name="857"><q-n>     857  </q-n></a>    .HTRANSS    (HTRANSS1),
<a name="858"><q-n>     858  </q-n></a>    .HWRITES    (HWRITES1),
<a name="859"><q-n>     859  </q-n></a>    .HSIZES     (HSIZES1),
<a name="860"><q-n>     860  </q-n></a>    .HBURSTS    (HBURSTS1),
<a name="861"><q-n>     861  </q-n></a>    .HPROTS     (HPROTS1),
<a name="862"><q-n>     862  </q-n></a>    .HMASTERS   (HMASTERS1),
<a name="863"><q-n>     863  </q-n></a>    .HMASTLOCKS (HMASTLOCKS1),
<a name="864"><q-n>     864  </q-n></a>    .HREADYS    (HREADYS1),
<a name="865"><q-n>     865  </q-n></a>    .HAUSERS    (HAUSERS1),
<a name="866"><q-n>     866  </q-n></a>
<a name="867"><q-n>     867  </q-n></a>    <q-m>// Internal Response</q-m>
<a name="868"><q-n>     868  </q-n></a>    .active_ip     (i_active1),
<a name="869"><q-n>     869  </q-n></a>    .readyout_ip   (i_readyout1),
<a name="870"><q-n>     870  </q-n></a>    .resp_ip       (i_resp1),
<a name="871"><q-n>     871  </q-n></a>
<a name="872"><q-n>     872  </q-n></a>    <q-m>// Input Port Response</q-m>
<a name="873"><q-n>     873  </q-n></a>    .HREADYOUTS (HREADYOUTS1),
<a name="874"><q-n>     874  </q-n></a>    .HRESPS     (HRESPS1),
<a name="875"><q-n>     875  </q-n></a>
<a name="876"><q-n>     876  </q-n></a>    <q-m>// Internal Address/Control Signals</q-m>
<a name="877"><q-n>     877  </q-n></a>    .sel_ip        (i_sel1),
<a name="878"><q-n>     878  </q-n></a>    .addr_ip       (i_addr1),
<a name="879"><q-n>     879  </q-n></a>    .auser_ip      (i_auser1),
<a name="880"><q-n>     880  </q-n></a>    .trans_ip      (i_trans1),
<a name="881"><q-n>     881  </q-n></a>    .write_ip      (i_write1),
<a name="882"><q-n>     882  </q-n></a>    .size_ip       (i_size1),
<a name="883"><q-n>     883  </q-n></a>    .burst_ip      (i_burst1),
<a name="884"><q-n>     884  </q-n></a>    .prot_ip       (i_prot1),
<a name="885"><q-n>     885  </q-n></a>    .master_ip     (i_master1),
<a name="886"><q-n>     886  </q-n></a>    .mastlock_ip   (i_mastlock1),
<a name="887"><q-n>     887  </q-n></a>    .held_tran_ip   (i_held_tran1)
<a name="888"><q-n>     888  </q-n></a>
<a name="889"><q-n>     889  </q-n></a>    );
<a name="890"><q-n>     890  </q-n></a>
<a name="891"><q-n>     891  </q-n></a>
<a name="892"><q-n>     892  </q-n></a>  <q-m>// Input stage for SI2</q-m>
<a name="893"><q-n>     893  </q-n></a>  cm3_in u_cm3_in_2 (
<a name="894"><q-n>     894  </q-n></a>
<a name="895"><q-n>     895  </q-n></a>    <q-m>// Common AHB signals</q-m>
<a name="896"><q-n>     896  </q-n></a>    .HCLK       (HCLK),
<a name="897"><q-n>     897  </q-n></a>    .HRESETn    (HRESETn),
<a name="898"><q-n>     898  </q-n></a>
<a name="899"><q-n>     899  </q-n></a>    <q-m>// Input Port Address/Control Signals</q-m>
<a name="900"><q-n>     900  </q-n></a>    .HSELS      (HSELS3),
<a name="901"><q-n>     901  </q-n></a>    .HADDRS     (HADDRS3),
<a name="902"><q-n>     902  </q-n></a>    .HTRANSS    (HTRANSS3),
<a name="903"><q-n>     903  </q-n></a>    .HWRITES    (HWRITES3),
<a name="904"><q-n>     904  </q-n></a>    .HSIZES     (HSIZES3),
<a name="905"><q-n>     905  </q-n></a>    .HBURSTS    (HBURSTS3),
<a name="906"><q-n>     906  </q-n></a>    .HPROTS     (HPROTS3),
<a name="907"><q-n>     907  </q-n></a>    .HMASTERS   (HMASTERS3),
<a name="908"><q-n>     908  </q-n></a>    .HMASTLOCKS (HMASTLOCKS3),
<a name="909"><q-n>     909  </q-n></a>    .HREADYS    (HREADYS3),
<a name="910"><q-n>     910  </q-n></a>    .HAUSERS    (HAUSERS3),
<a name="911"><q-n>     911  </q-n></a>
<a name="912"><q-n>     912  </q-n></a>    <q-m>// Internal Response</q-m>
<a name="913"><q-n>     913  </q-n></a>    .active_ip     (i_active2),
<a name="914"><q-n>     914  </q-n></a>    .readyout_ip   (i_readyout2),
<a name="915"><q-n>     915  </q-n></a>    .resp_ip       (i_resp2),
<a name="916"><q-n>     916  </q-n></a>
<a name="917"><q-n>     917  </q-n></a>    <q-m>// Input Port Response</q-m>
<a name="918"><q-n>     918  </q-n></a>    .HREADYOUTS (HREADYOUTS3),
<a name="919"><q-n>     919  </q-n></a>    .HRESPS     (HRESPS3),
<a name="920"><q-n>     920  </q-n></a>
<a name="921"><q-n>     921  </q-n></a>    <q-m>// Internal Address/Control Signals</q-m>
<a name="922"><q-n>     922  </q-n></a>    .sel_ip        (i_sel2),
<a name="923"><q-n>     923  </q-n></a>    .addr_ip       (i_addr2),
<a name="924"><q-n>     924  </q-n></a>    .auser_ip      (i_auser2),
<a name="925"><q-n>     925  </q-n></a>    .trans_ip      (i_trans2),
<a name="926"><q-n>     926  </q-n></a>    .write_ip      (i_write2),
<a name="927"><q-n>     927  </q-n></a>    .size_ip       (i_size2),
<a name="928"><q-n>     928  </q-n></a>    .burst_ip      (i_burst2),
<a name="929"><q-n>     929  </q-n></a>    .prot_ip       (i_prot2),
<a name="930"><q-n>     930  </q-n></a>    .master_ip     (i_master2),
<a name="931"><q-n>     931  </q-n></a>    .mastlock_ip   (i_mastlock2),
<a name="932"><q-n>     932  </q-n></a>    .held_tran_ip   (i_held_tran2)
<a name="933"><q-n>     933  </q-n></a>
<a name="934"><q-n>     934  </q-n></a>    );
<a name="935"><q-n>     935  </q-n></a>
<a name="936"><q-n>     936  </q-n></a>
<a name="937"><q-n>     937  </q-n></a>  <q-m>// Input stage for SI3</q-m>
<a name="938"><q-n>     938  </q-n></a>  cm3_in u_cm3_in_3 (
<a name="939"><q-n>     939  </q-n></a>
<a name="940"><q-n>     940  </q-n></a>    <q-m>// Common AHB signals</q-m>
<a name="941"><q-n>     941  </q-n></a>    .HCLK       (HCLK),
<a name="942"><q-n>     942  </q-n></a>    .HRESETn    (HRESETn),
<a name="943"><q-n>     943  </q-n></a>
<a name="944"><q-n>     944  </q-n></a>    <q-m>// Input Port Address/Control Signals</q-m>
<a name="945"><q-n>     945  </q-n></a>    .HSELS      (HSELS4),
<a name="946"><q-n>     946  </q-n></a>    .HADDRS     (HADDRS4),
<a name="947"><q-n>     947  </q-n></a>    .HTRANSS    (HTRANSS4),
<a name="948"><q-n>     948  </q-n></a>    .HWRITES    (HWRITES4),
<a name="949"><q-n>     949  </q-n></a>    .HSIZES     (HSIZES4),
<a name="950"><q-n>     950  </q-n></a>    .HBURSTS    (HBURSTS4),
<a name="951"><q-n>     951  </q-n></a>    .HPROTS     (HPROTS4),
<a name="952"><q-n>     952  </q-n></a>    .HMASTERS   (HMASTERS4),
<a name="953"><q-n>     953  </q-n></a>    .HMASTLOCKS (HMASTLOCKS4),
<a name="954"><q-n>     954  </q-n></a>    .HREADYS    (HREADYS4),
<a name="955"><q-n>     955  </q-n></a>    .HAUSERS    (HAUSERS4),
<a name="956"><q-n>     956  </q-n></a>
<a name="957"><q-n>     957  </q-n></a>    <q-m>// Internal Response</q-m>
<a name="958"><q-n>     958  </q-n></a>    .active_ip     (i_active3),
<a name="959"><q-n>     959  </q-n></a>    .readyout_ip   (i_readyout3),
<a name="960"><q-n>     960  </q-n></a>    .resp_ip       (i_resp3),
<a name="961"><q-n>     961  </q-n></a>
<a name="962"><q-n>     962  </q-n></a>    <q-m>// Input Port Response</q-m>
<a name="963"><q-n>     963  </q-n></a>    .HREADYOUTS (HREADYOUTS4),
<a name="964"><q-n>     964  </q-n></a>    .HRESPS     (HRESPS4),
<a name="965"><q-n>     965  </q-n></a>
<a name="966"><q-n>     966  </q-n></a>    <q-m>// Internal Address/Control Signals</q-m>
<a name="967"><q-n>     967  </q-n></a>    .sel_ip        (i_sel3),
<a name="968"><q-n>     968  </q-n></a>    .addr_ip       (i_addr3),
<a name="969"><q-n>     969  </q-n></a>    .auser_ip      (i_auser3),
<a name="970"><q-n>     970  </q-n></a>    .trans_ip      (i_trans3),
<a name="971"><q-n>     971  </q-n></a>    .write_ip      (i_write3),
<a name="972"><q-n>     972  </q-n></a>    .size_ip       (i_size3),
<a name="973"><q-n>     973  </q-n></a>    .burst_ip      (i_burst3),
<a name="974"><q-n>     974  </q-n></a>    .prot_ip       (i_prot3),
<a name="975"><q-n>     975  </q-n></a>    .master_ip     (i_master3),
<a name="976"><q-n>     976  </q-n></a>    .mastlock_ip   (i_mastlock3),
<a name="977"><q-n>     977  </q-n></a>    .held_tran_ip   (i_held_tran3)
<a name="978"><q-n>     978  </q-n></a>
<a name="979"><q-n>     979  </q-n></a>    );
<a name="980"><q-n>     980  </q-n></a>
<a name="981"><q-n>     981  </q-n></a>
<a name="982"><q-n>     982  </q-n></a>  <q-m>// Input stage for SI4</q-m>
<a name="983"><q-n>     983  </q-n></a>  cm3_in u_cm3_in_4 (
<a name="984"><q-n>     984  </q-n></a>
<a name="985"><q-n>     985  </q-n></a>    <q-m>// Common AHB signals</q-m>
<a name="986"><q-n>     986  </q-n></a>    .HCLK       (HCLK),
<a name="987"><q-n>     987  </q-n></a>    .HRESETn    (HRESETn),
<a name="988"><q-n>     988  </q-n></a>
<a name="989"><q-n>     989  </q-n></a>    <q-m>// Input Port Address/Control Signals</q-m>
<a name="990"><q-n>     990  </q-n></a>    .HSELS      (HSELS5),
<a name="991"><q-n>     991  </q-n></a>    .HADDRS     (HADDRS5),
<a name="992"><q-n>     992  </q-n></a>    .HTRANSS    (HTRANSS5),
<a name="993"><q-n>     993  </q-n></a>    .HWRITES    (HWRITES5),
<a name="994"><q-n>     994  </q-n></a>    .HSIZES     (HSIZES5),
<a name="995"><q-n>     995  </q-n></a>    .HBURSTS    (HBURSTS5),
<a name="996"><q-n>     996  </q-n></a>    .HPROTS     (HPROTS5),
<a name="997"><q-n>     997  </q-n></a>    .HMASTERS   (HMASTERS5),
<a name="998"><q-n>     998  </q-n></a>    .HMASTLOCKS (HMASTLOCKS5),
<a name="999"><q-n>     999  </q-n></a>    .HREADYS    (HREADYS5),
<a name="1000"><q-n>     1000  </q-n></a>    .HAUSERS    (HAUSERS5),
<a name="1001"><q-n>     1001  </q-n></a>
<a name="1002"><q-n>     1002  </q-n></a>    <q-m>// Internal Response</q-m>
<a name="1003"><q-n>     1003  </q-n></a>    .active_ip     (i_active4),
<a name="1004"><q-n>     1004  </q-n></a>    .readyout_ip   (i_readyout4),
<a name="1005"><q-n>     1005  </q-n></a>    .resp_ip       (i_resp4),
<a name="1006"><q-n>     1006  </q-n></a>
<a name="1007"><q-n>     1007  </q-n></a>    <q-m>// Input Port Response</q-m>
<a name="1008"><q-n>     1008  </q-n></a>    .HREADYOUTS (HREADYOUTS5),
<a name="1009"><q-n>     1009  </q-n></a>    .HRESPS     (HRESPS5),
<a name="1010"><q-n>     1010  </q-n></a>
<a name="1011"><q-n>     1011  </q-n></a>    <q-m>// Internal Address/Control Signals</q-m>
<a name="1012"><q-n>     1012  </q-n></a>    .sel_ip        (i_sel4),
<a name="1013"><q-n>     1013  </q-n></a>    .addr_ip       (i_addr4),
<a name="1014"><q-n>     1014  </q-n></a>    .auser_ip      (i_auser4),
<a name="1015"><q-n>     1015  </q-n></a>    .trans_ip      (i_trans4),
<a name="1016"><q-n>     1016  </q-n></a>    .write_ip      (i_write4),
<a name="1017"><q-n>     1017  </q-n></a>    .size_ip       (i_size4),
<a name="1018"><q-n>     1018  </q-n></a>    .burst_ip      (i_burst4),
<a name="1019"><q-n>     1019  </q-n></a>    .prot_ip       (i_prot4),
<a name="1020"><q-n>     1020  </q-n></a>    .master_ip     (i_master4),
<a name="1021"><q-n>     1021  </q-n></a>    .mastlock_ip   (i_mastlock4),
<a name="1022"><q-n>     1022  </q-n></a>    .held_tran_ip   (i_held_tran4)
<a name="1023"><q-n>     1023  </q-n></a>
<a name="1024"><q-n>     1024  </q-n></a>    );
<a name="1025"><q-n>     1025  </q-n></a>
<a name="1026"><q-n>     1026  </q-n></a>
<a name="1027"><q-n>     1027  </q-n></a>  <q-m>// Matrix decoder for SI0</q-m>
<a name="1028"><q-n>     1028  </q-n></a>  cmsdk_MyDecoderNameS0 u_cmsdk_mydecodernames0 (
<a name="1029"><q-n>     1029  </q-n></a>
<a name="1030"><q-n>     1030  </q-n></a>    <q-m>// Common AHB signals</q-m>
<a name="1031"><q-n>     1031  </q-n></a>    .HCLK       (HCLK),
<a name="1032"><q-n>     1032  </q-n></a>    .HRESETn    (HRESETn),
<a name="1033"><q-n>     1033  </q-n></a>
<a name="1034"><q-n>     1034  </q-n></a>    <q-m>// Signals from Input stage SI0</q-m>
<a name="1035"><q-n>     1035  </q-n></a>    .HREADYS    (HREADYS0),
<a name="1036"><q-n>     1036  </q-n></a>    .sel_dec        (i_sel0),
<a name="1037"><q-n>     1037  </q-n></a>    .decode_addr_dec (i_addr0[31:10]),   <q-m>// HADDR[9:0] is not decoded</q-m>
<a name="1038"><q-n>     1038  </q-n></a>    .trans_dec      (i_trans0),
<a name="1039"><q-n>     1039  </q-n></a>
<a name="1040"><q-n>     1040  </q-n></a>    <q-m>// Control/Response for Output Stage MI0</q-m>
<a name="1041"><q-n>     1041  </q-n></a>    .active_dec0    (i_active0to0),
<a name="1042"><q-n>     1042  </q-n></a>    .readyout_dec0  (i_hready_mux_m0),
<a name="1043"><q-n>     1043  </q-n></a>    .resp_dec0      (HRESPM0),
<a name="1044"><q-n>     1044  </q-n></a>    .rdata_dec0     (HRDATAM0),
<a name="1045"><q-n>     1045  </q-n></a>    .ruser_dec0     (HRUSERM0),
<a name="1046"><q-n>     1046  </q-n></a>
<a name="1047"><q-n>     1047  </q-n></a>    <q-m>// Control/Response for Output Stage MI1</q-m>
<a name="1048"><q-n>     1048  </q-n></a>    .active_dec1    (i_active0to1),
<a name="1049"><q-n>     1049  </q-n></a>    .readyout_dec1  (i_hready_mux_m1),
<a name="1050"><q-n>     1050  </q-n></a>    .resp_dec1      (HRESPM1),
<a name="1051"><q-n>     1051  </q-n></a>    .rdata_dec1     (HRDATAM1),
<a name="1052"><q-n>     1052  </q-n></a>    .ruser_dec1     (HRUSERM1),
<a name="1053"><q-n>     1053  </q-n></a>
<a name="1054"><q-n>     1054  </q-n></a>    .sel_dec0       (i_sel0to0),
<a name="1055"><q-n>     1055  </q-n></a>    .sel_dec1       (i_sel0to1),
<a name="1056"><q-n>     1056  </q-n></a>
<a name="1057"><q-n>     1057  </q-n></a>    .active_dec     (i_active0),
<a name="1058"><q-n>     1058  </q-n></a>    .HREADYOUTS (i_readyout0),
<a name="1059"><q-n>     1059  </q-n></a>    .HRESPS     (i_resp0),
<a name="1060"><q-n>     1060  </q-n></a>    .HRUSERS    (HRUSERS0),
<a name="1061"><q-n>     1061  </q-n></a>    .HRDATAS    (HRDATAS0)
<a name="1062"><q-n>     1062  </q-n></a>
<a name="1063"><q-n>     1063  </q-n></a>    );
<a name="1064"><q-n>     1064  </q-n></a>
<a name="1065"><q-n>     1065  </q-n></a>
<a name="1066"><q-n>     1066  </q-n></a>  <q-m>// Matrix decoder for SI1</q-m>
<a name="1067"><q-n>     1067  </q-n></a>  cmsdk_MyDecoderNameS1 u_cmsdk_mydecodernames1 (
<a name="1068"><q-n>     1068  </q-n></a>
<a name="1069"><q-n>     1069  </q-n></a>    <q-m>// Common AHB signals</q-m>
<a name="1070"><q-n>     1070  </q-n></a>    .HCLK       (HCLK),
<a name="1071"><q-n>     1071  </q-n></a>    .HRESETn    (HRESETn),
<a name="1072"><q-n>     1072  </q-n></a>
<a name="1073"><q-n>     1073  </q-n></a>    <q-m>// Signals from Input stage SI1</q-m>
<a name="1074"><q-n>     1074  </q-n></a>    .HREADYS    (HREADYS1),
<a name="1075"><q-n>     1075  </q-n></a>    .sel_dec        (i_sel1),
<a name="1076"><q-n>     1076  </q-n></a>    .decode_addr_dec (i_addr1[31:10]),   <q-m>// HADDR[9:0] is not decoded</q-m>
<a name="1077"><q-n>     1077  </q-n></a>    .trans_dec      (i_trans1),
<a name="1078"><q-n>     1078  </q-n></a>
<a name="1079"><q-n>     1079  </q-n></a>    <q-m>// Control/Response for Output Stage MI0</q-m>
<a name="1080"><q-n>     1080  </q-n></a>    .active_dec0    (i_active1to0),
<a name="1081"><q-n>     1081  </q-n></a>    .readyout_dec0  (i_hready_mux_m0),
<a name="1082"><q-n>     1082  </q-n></a>    .resp_dec0      (HRESPM0),
<a name="1083"><q-n>     1083  </q-n></a>    .rdata_dec0     (HRDATAM0),
<a name="1084"><q-n>     1084  </q-n></a>    .ruser_dec0     (HRUSERM0),
<a name="1085"><q-n>     1085  </q-n></a>
<a name="1086"><q-n>     1086  </q-n></a>    <q-m>// Control/Response for Output Stage MI1</q-m>
<a name="1087"><q-n>     1087  </q-n></a>    .active_dec1    (i_active1to1),
<a name="1088"><q-n>     1088  </q-n></a>    .readyout_dec1  (i_hready_mux_m1),
<a name="1089"><q-n>     1089  </q-n></a>    .resp_dec1      (HRESPM1),
<a name="1090"><q-n>     1090  </q-n></a>    .rdata_dec1     (HRDATAM1),
<a name="1091"><q-n>     1091  </q-n></a>    .ruser_dec1     (HRUSERM1),
<a name="1092"><q-n>     1092  </q-n></a>
<a name="1093"><q-n>     1093  </q-n></a>    .sel_dec0       (i_sel1to0),
<a name="1094"><q-n>     1094  </q-n></a>    .sel_dec1       (i_sel1to1),
<a name="1095"><q-n>     1095  </q-n></a>
<a name="1096"><q-n>     1096  </q-n></a>    .active_dec     (i_active1),
<a name="1097"><q-n>     1097  </q-n></a>    .HREADYOUTS (i_readyout1),
<a name="1098"><q-n>     1098  </q-n></a>    .HRESPS     (i_resp1),
<a name="1099"><q-n>     1099  </q-n></a>    .HRUSERS    (HRUSERS1),
<a name="1100"><q-n>     1100  </q-n></a>    .HRDATAS    (HRDATAS1)
<a name="1101"><q-n>     1101  </q-n></a>
<a name="1102"><q-n>     1102  </q-n></a>    );
<a name="1103"><q-n>     1103  </q-n></a>
<a name="1104"><q-n>     1104  </q-n></a>
<a name="1105"><q-n>     1105  </q-n></a>  <q-m>// Matrix decoder for SI2</q-m>
<a name="1106"><q-n>     1106  </q-n></a>  cmsdk_MyDecoderNameS3 u_cmsdk_mydecodernames3 (
<a name="1107"><q-n>     1107  </q-n></a>
<a name="1108"><q-n>     1108  </q-n></a>    <q-m>// Common AHB signals</q-m>
<a name="1109"><q-n>     1109  </q-n></a>    .HCLK       (HCLK),
<a name="1110"><q-n>     1110  </q-n></a>    .HRESETn    (HRESETn),
<a name="1111"><q-n>     1111  </q-n></a>
<a name="1112"><q-n>     1112  </q-n></a>    <q-m>// Signals from Input stage SI2</q-m>
<a name="1113"><q-n>     1113  </q-n></a>    .HREADYS    (HREADYS3),
<a name="1114"><q-n>     1114  </q-n></a>    .sel_dec        (i_sel2),
<a name="1115"><q-n>     1115  </q-n></a>    .decode_addr_dec (i_addr2[31:10]),   <q-m>// HADDR[9:0] is not decoded</q-m>
<a name="1116"><q-n>     1116  </q-n></a>    .trans_dec      (i_trans2),
<a name="1117"><q-n>     1117  </q-n></a>
<a name="1118"><q-n>     1118  </q-n></a>    <q-m>// Control/Response for Output Stage MI2</q-m>
<a name="1119"><q-n>     1119  </q-n></a>    .active_dec2    (i_active2to2),
<a name="1120"><q-n>     1120  </q-n></a>    .readyout_dec2  (i_hready_mux_m2),
<a name="1121"><q-n>     1121  </q-n></a>    .resp_dec2      (HRESPM2),
<a name="1122"><q-n>     1122  </q-n></a>    .rdata_dec2     (HRDATAM2),
<a name="1123"><q-n>     1123  </q-n></a>    .ruser_dec2     (HRUSERM2),
<a name="1124"><q-n>     1124  </q-n></a>
<a name="1125"><q-n>     1125  </q-n></a>    <q-m>// Control/Response for Output Stage MI3</q-m>
<a name="1126"><q-n>     1126  </q-n></a>    .active_dec3    (i_active2to3),
<a name="1127"><q-n>     1127  </q-n></a>    .readyout_dec3  (i_hready_mux_m3),
<a name="1128"><q-n>     1128  </q-n></a>    .resp_dec3      (HRESPM3),
<a name="1129"><q-n>     1129  </q-n></a>    .rdata_dec3     (HRDATAM3),
<a name="1130"><q-n>     1130  </q-n></a>    .ruser_dec3     (HRUSERM3),
<a name="1131"><q-n>     1131  </q-n></a>
<a name="1132"><q-n>     1132  </q-n></a>    .sel_dec2       (i_sel2to2),
<a name="1133"><q-n>     1133  </q-n></a>    .sel_dec3       (i_sel2to3),
<a name="1134"><q-n>     1134  </q-n></a>
<a name="1135"><q-n>     1135  </q-n></a>    .active_dec     (i_active2),
<a name="1136"><q-n>     1136  </q-n></a>    .HREADYOUTS (i_readyout2),
<a name="1137"><q-n>     1137  </q-n></a>    .HRESPS     (i_resp2),
<a name="1138"><q-n>     1138  </q-n></a>    .HRUSERS    (HRUSERS3),
<a name="1139"><q-n>     1139  </q-n></a>    .HRDATAS    (HRDATAS3)
<a name="1140"><q-n>     1140  </q-n></a>
<a name="1141"><q-n>     1141  </q-n></a>    );
<a name="1142"><q-n>     1142  </q-n></a>
<a name="1143"><q-n>     1143  </q-n></a>
<a name="1144"><q-n>     1144  </q-n></a>  <q-m>// Matrix decoder for SI3</q-m>
<a name="1145"><q-n>     1145  </q-n></a>  cmsdk_MyDecoderNameS4 u_cmsdk_mydecodernames4 (
<a name="1146"><q-n>     1146  </q-n></a>
<a name="1147"><q-n>     1147  </q-n></a>    <q-m>// Common AHB signals</q-m>
<a name="1148"><q-n>     1148  </q-n></a>    .HCLK       (HCLK),
<a name="1149"><q-n>     1149  </q-n></a>    .HRESETn    (HRESETn),
<a name="1150"><q-n>     1150  </q-n></a>
<a name="1151"><q-n>     1151  </q-n></a>    <q-m>// Signals from Input stage SI3</q-m>
<a name="1152"><q-n>     1152  </q-n></a>    .HREADYS    (HREADYS4),
<a name="1153"><q-n>     1153  </q-n></a>    .sel_dec        (i_sel3),
<a name="1154"><q-n>     1154  </q-n></a>    .decode_addr_dec (i_addr3[31:10]),   <q-m>// HADDR[9:0] is not decoded</q-m>
<a name="1155"><q-n>     1155  </q-n></a>    .trans_dec      (i_trans3),
<a name="1156"><q-n>     1156  </q-n></a>
<a name="1157"><q-n>     1157  </q-n></a>    <q-m>// Control/Response for Output Stage MI0</q-m>
<a name="1158"><q-n>     1158  </q-n></a>    .active_dec0    (i_active3to0),
<a name="1159"><q-n>     1159  </q-n></a>    .readyout_dec0  (i_hready_mux_m0),
<a name="1160"><q-n>     1160  </q-n></a>    .resp_dec0      (HRESPM0),
<a name="1161"><q-n>     1161  </q-n></a>    .rdata_dec0     (HRDATAM0),
<a name="1162"><q-n>     1162  </q-n></a>    .ruser_dec0     (HRUSERM0),
<a name="1163"><q-n>     1163  </q-n></a>
<a name="1164"><q-n>     1164  </q-n></a>    <q-m>// Control/Response for Output Stage MI1</q-m>
<a name="1165"><q-n>     1165  </q-n></a>    .active_dec1    (i_active3to1),
<a name="1166"><q-n>     1166  </q-n></a>    .readyout_dec1  (i_hready_mux_m1),
<a name="1167"><q-n>     1167  </q-n></a>    .resp_dec1      (HRESPM1),
<a name="1168"><q-n>     1168  </q-n></a>    .rdata_dec1     (HRDATAM1),
<a name="1169"><q-n>     1169  </q-n></a>    .ruser_dec1     (HRUSERM1),
<a name="1170"><q-n>     1170  </q-n></a>
<a name="1171"><q-n>     1171  </q-n></a>    <q-m>// Control/Response for Output Stage MI2</q-m>
<a name="1172"><q-n>     1172  </q-n></a>    .active_dec2    (i_active3to2),
<a name="1173"><q-n>     1173  </q-n></a>    .readyout_dec2  (i_hready_mux_m2),
<a name="1174"><q-n>     1174  </q-n></a>    .resp_dec2      (HRESPM2),
<a name="1175"><q-n>     1175  </q-n></a>    .rdata_dec2     (HRDATAM2),
<a name="1176"><q-n>     1176  </q-n></a>    .ruser_dec2     (HRUSERM2),
<a name="1177"><q-n>     1177  </q-n></a>
<a name="1178"><q-n>     1178  </q-n></a>    .sel_dec0       (i_sel3to0),
<a name="1179"><q-n>     1179  </q-n></a>    .sel_dec1       (i_sel3to1),
<a name="1180"><q-n>     1180  </q-n></a>    .sel_dec2       (i_sel3to2),
<a name="1181"><q-n>     1181  </q-n></a>
<a name="1182"><q-n>     1182  </q-n></a>    .active_dec     (i_active3),
<a name="1183"><q-n>     1183  </q-n></a>    .HREADYOUTS (i_readyout3),
<a name="1184"><q-n>     1184  </q-n></a>    .HRESPS     (i_resp3),
<a name="1185"><q-n>     1185  </q-n></a>    .HRUSERS    (HRUSERS4),
<a name="1186"><q-n>     1186  </q-n></a>    .HRDATAS    (HRDATAS4)
<a name="1187"><q-n>     1187  </q-n></a>
<a name="1188"><q-n>     1188  </q-n></a>    );
<a name="1189"><q-n>     1189  </q-n></a>
<a name="1190"><q-n>     1190  </q-n></a>
<a name="1191"><q-n>     1191  </q-n></a>  <q-m>// Matrix decoder for SI4</q-m>
<a name="1192"><q-n>     1192  </q-n></a>  cmsdk_MyDecoderNameS5 u_cmsdk_mydecodernames5 (
<a name="1193"><q-n>     1193  </q-n></a>
<a name="1194"><q-n>     1194  </q-n></a>    <q-m>// Common AHB signals</q-m>
<a name="1195"><q-n>     1195  </q-n></a>    .HCLK       (HCLK),
<a name="1196"><q-n>     1196  </q-n></a>    .HRESETn    (HRESETn),
<a name="1197"><q-n>     1197  </q-n></a>
<a name="1198"><q-n>     1198  </q-n></a>    <q-m>// Signals from Input stage SI4</q-m>
<a name="1199"><q-n>     1199  </q-n></a>    .HREADYS    (HREADYS5),
<a name="1200"><q-n>     1200  </q-n></a>    .sel_dec        (i_sel4),
<a name="1201"><q-n>     1201  </q-n></a>    .decode_addr_dec (i_addr4[31:10]),   <q-m>// HADDR[9:0] is not decoded</q-m>
<a name="1202"><q-n>     1202  </q-n></a>    .trans_dec      (i_trans4),
<a name="1203"><q-n>     1203  </q-n></a>
<a name="1204"><q-n>     1204  </q-n></a>    <q-m>// Control/Response for Output Stage MI0</q-m>
<a name="1205"><q-n>     1205  </q-n></a>    .active_dec0    (i_active4to0),
<a name="1206"><q-n>     1206  </q-n></a>    .readyout_dec0  (i_hready_mux_m0),
<a name="1207"><q-n>     1207  </q-n></a>    .resp_dec0      (HRESPM0),
<a name="1208"><q-n>     1208  </q-n></a>    .rdata_dec0     (HRDATAM0),
<a name="1209"><q-n>     1209  </q-n></a>    .ruser_dec0     (HRUSERM0),
<a name="1210"><q-n>     1210  </q-n></a>
<a name="1211"><q-n>     1211  </q-n></a>    <q-m>// Control/Response for Output Stage MI1</q-m>
<a name="1212"><q-n>     1212  </q-n></a>    .active_dec1    (i_active4to1),
<a name="1213"><q-n>     1213  </q-n></a>    .readyout_dec1  (i_hready_mux_m1),
<a name="1214"><q-n>     1214  </q-n></a>    .resp_dec1      (HRESPM1),
<a name="1215"><q-n>     1215  </q-n></a>    .rdata_dec1     (HRDATAM1),
<a name="1216"><q-n>     1216  </q-n></a>    .ruser_dec1     (HRUSERM1),
<a name="1217"><q-n>     1217  </q-n></a>
<a name="1218"><q-n>     1218  </q-n></a>    <q-m>// Control/Response for Output Stage MI3</q-m>
<a name="1219"><q-n>     1219  </q-n></a>    .active_dec3    (i_active4to3),
<a name="1220"><q-n>     1220  </q-n></a>    .readyout_dec3  (i_hready_mux_m3),
<a name="1221"><q-n>     1221  </q-n></a>    .resp_dec3      (HRESPM3),
<a name="1222"><q-n>     1222  </q-n></a>    .rdata_dec3     (HRDATAM3),
<a name="1223"><q-n>     1223  </q-n></a>    .ruser_dec3     (HRUSERM3),
<a name="1224"><q-n>     1224  </q-n></a>
<a name="1225"><q-n>     1225  </q-n></a>    .sel_dec0       (i_sel4to0),
<a name="1226"><q-n>     1226  </q-n></a>    .sel_dec1       (i_sel4to1),
<a name="1227"><q-n>     1227  </q-n></a>    .sel_dec3       (i_sel4to3),
<a name="1228"><q-n>     1228  </q-n></a>
<a name="1229"><q-n>     1229  </q-n></a>    .active_dec     (i_active4),
<a name="1230"><q-n>     1230  </q-n></a>    .HREADYOUTS (i_readyout4),
<a name="1231"><q-n>     1231  </q-n></a>    .HRESPS     (i_resp4),
<a name="1232"><q-n>     1232  </q-n></a>    .HRUSERS    (HRUSERS5),
<a name="1233"><q-n>     1233  </q-n></a>    .HRDATAS    (HRDATAS5)
<a name="1234"><q-n>     1234  </q-n></a>
<a name="1235"><q-n>     1235  </q-n></a>    );
<a name="1236"><q-n>     1236  </q-n></a>
<a name="1237"><q-n>     1237  </q-n></a>
<a name="1238"><q-n>     1238  </q-n></a>  <q-m>// Output stage for MI0</q-m>
<a name="1239"><q-n>     1239  </q-n></a>  cm3_outM0 u_cm3_outm0_0 (
<a name="1240"><q-n>     1240  </q-n></a>
<a name="1241"><q-n>     1241  </q-n></a>    <q-m>// Common AHB signals</q-m>
<a name="1242"><q-n>     1242  </q-n></a>    .HCLK       (HCLK),
<a name="1243"><q-n>     1243  </q-n></a>    .HRESETn    (HRESETn),
<a name="1244"><q-n>     1244  </q-n></a>
<a name="1245"><q-n>     1245  </q-n></a>    <q-m>// Port 0 Signals</q-m>
<a name="1246"><q-n>     1246  </q-n></a>    .sel_op0       (i_sel0to0),
<a name="1247"><q-n>     1247  </q-n></a>    .addr_op0      (i_addr0),
<a name="1248"><q-n>     1248  </q-n></a>    .auser_op0     (i_auser0),
<a name="1249"><q-n>     1249  </q-n></a>    .trans_op0     (i_trans0),
<a name="1250"><q-n>     1250  </q-n></a>    .write_op0     (i_write0),
<a name="1251"><q-n>     1251  </q-n></a>    .size_op0      (i_size0),
<a name="1252"><q-n>     1252  </q-n></a>    .burst_op0     (i_burst0),
<a name="1253"><q-n>     1253  </q-n></a>    .prot_op0      (i_prot0),
<a name="1254"><q-n>     1254  </q-n></a>    .master_op0    (i_master0),
<a name="1255"><q-n>     1255  </q-n></a>    .mastlock_op0  (i_mastlock0),
<a name="1256"><q-n>     1256  </q-n></a>    .wdata_op0     (HWDATAS0),
<a name="1257"><q-n>     1257  </q-n></a>    .wuser_op0     (HWUSERS0),
<a name="1258"><q-n>     1258  </q-n></a>    .held_tran_op0  (i_held_tran0),
<a name="1259"><q-n>     1259  </q-n></a>
<a name="1260"><q-n>     1260  </q-n></a>    <q-m>// Port 1 Signals</q-m>
<a name="1261"><q-n>     1261  </q-n></a>    .sel_op1       (i_sel1to0),
<a name="1262"><q-n>     1262  </q-n></a>    .addr_op1      (i_addr1),
<a name="1263"><q-n>     1263  </q-n></a>    .auser_op1     (i_auser1),
<a name="1264"><q-n>     1264  </q-n></a>    .trans_op1     (i_trans1),
<a name="1265"><q-n>     1265  </q-n></a>    .write_op1     (i_write1),
<a name="1266"><q-n>     1266  </q-n></a>    .size_op1      (i_size1),
<a name="1267"><q-n>     1267  </q-n></a>    .burst_op1     (i_burst1),
<a name="1268"><q-n>     1268  </q-n></a>    .prot_op1      (i_prot1),
<a name="1269"><q-n>     1269  </q-n></a>    .master_op1    (i_master1),
<a name="1270"><q-n>     1270  </q-n></a>    .mastlock_op1  (i_mastlock1),
<a name="1271"><q-n>     1271  </q-n></a>    .wdata_op1     (HWDATAS1),
<a name="1272"><q-n>     1272  </q-n></a>    .wuser_op1     (HWUSERS1),
<a name="1273"><q-n>     1273  </q-n></a>    .held_tran_op1  (i_held_tran1),
<a name="1274"><q-n>     1274  </q-n></a>
<a name="1275"><q-n>     1275  </q-n></a>    <q-m>// Port 3 Signals</q-m>
<a name="1276"><q-n>     1276  </q-n></a>    .sel_op3       (i_sel3to0),
<a name="1277"><q-n>     1277  </q-n></a>    .addr_op3      (i_addr3),
<a name="1278"><q-n>     1278  </q-n></a>    .auser_op3     (i_auser3),
<a name="1279"><q-n>     1279  </q-n></a>    .trans_op3     (i_trans3),
<a name="1280"><q-n>     1280  </q-n></a>    .write_op3     (i_write3),
<a name="1281"><q-n>     1281  </q-n></a>    .size_op3      (i_size3),
<a name="1282"><q-n>     1282  </q-n></a>    .burst_op3     (i_burst3),
<a name="1283"><q-n>     1283  </q-n></a>    .prot_op3      (i_prot3),
<a name="1284"><q-n>     1284  </q-n></a>    .master_op3    (i_master3),
<a name="1285"><q-n>     1285  </q-n></a>    .mastlock_op3  (i_mastlock3),
<a name="1286"><q-n>     1286  </q-n></a>    .wdata_op3     (HWDATAS4),
<a name="1287"><q-n>     1287  </q-n></a>    .wuser_op3     (HWUSERS4),
<a name="1288"><q-n>     1288  </q-n></a>    .held_tran_op3  (i_held_tran3),
<a name="1289"><q-n>     1289  </q-n></a>
<a name="1290"><q-n>     1290  </q-n></a>    <q-m>// Port 4 Signals</q-m>
<a name="1291"><q-n>     1291  </q-n></a>    .sel_op4       (i_sel4to0),
<a name="1292"><q-n>     1292  </q-n></a>    .addr_op4      (i_addr4),
<a name="1293"><q-n>     1293  </q-n></a>    .auser_op4     (i_auser4),
<a name="1294"><q-n>     1294  </q-n></a>    .trans_op4     (i_trans4),
<a name="1295"><q-n>     1295  </q-n></a>    .write_op4     (i_write4),
<a name="1296"><q-n>     1296  </q-n></a>    .size_op4      (i_size4),
<a name="1297"><q-n>     1297  </q-n></a>    .burst_op4     (i_burst4),
<a name="1298"><q-n>     1298  </q-n></a>    .prot_op4      (i_prot4),
<a name="1299"><q-n>     1299  </q-n></a>    .master_op4    (i_master4),
<a name="1300"><q-n>     1300  </q-n></a>    .mastlock_op4  (i_mastlock4),
<a name="1301"><q-n>     1301  </q-n></a>    .wdata_op4     (HWDATAS5),
<a name="1302"><q-n>     1302  </q-n></a>    .wuser_op4     (HWUSERS5),
<a name="1303"><q-n>     1303  </q-n></a>    .held_tran_op4  (i_held_tran4),
<a name="1304"><q-n>     1304  </q-n></a>
<a name="1305"><q-n>     1305  </q-n></a>    <q-m>// Slave read data and response</q-m>
<a name="1306"><q-n>     1306  </q-n></a>    .HREADYOUTM (HREADYOUTM0),
<a name="1307"><q-n>     1307  </q-n></a>
<a name="1308"><q-n>     1308  </q-n></a>    .active_op0    (i_active0to0),
<a name="1309"><q-n>     1309  </q-n></a>    .active_op1    (i_active1to0),
<a name="1310"><q-n>     1310  </q-n></a>    .active_op3    (i_active3to0),
<a name="1311"><q-n>     1311  </q-n></a>    .active_op4    (i_active4to0),
<a name="1312"><q-n>     1312  </q-n></a>
<a name="1313"><q-n>     1313  </q-n></a>    <q-m>// Slave Address/Control Signals</q-m>
<a name="1314"><q-n>     1314  </q-n></a>    .HSELM      (HSELM0),
<a name="1315"><q-n>     1315  </q-n></a>    .HADDRM     (HADDRM0),
<a name="1316"><q-n>     1316  </q-n></a>    .HAUSERM    (HAUSERM0),
<a name="1317"><q-n>     1317  </q-n></a>    .HTRANSM    (HTRANSM0),
<a name="1318"><q-n>     1318  </q-n></a>    .HWRITEM    (HWRITEM0),
<a name="1319"><q-n>     1319  </q-n></a>    .HSIZEM     (HSIZEM0),
<a name="1320"><q-n>     1320  </q-n></a>    .HBURSTM    (HBURSTM0),
<a name="1321"><q-n>     1321  </q-n></a>    .HPROTM     (HPROTM0),
<a name="1322"><q-n>     1322  </q-n></a>    .HMASTERM   (HMASTERM0),
<a name="1323"><q-n>     1323  </q-n></a>    .HMASTLOCKM (HMASTLOCKM0),
<a name="1324"><q-n>     1324  </q-n></a>    .HREADYMUXM (i_hready_mux_m0),
<a name="1325"><q-n>     1325  </q-n></a>    .HWUSERM    (HWUSERM0),
<a name="1326"><q-n>     1326  </q-n></a>    .HWDATAM    (HWDATAM0)
<a name="1327"><q-n>     1327  </q-n></a>
<a name="1328"><q-n>     1328  </q-n></a>    );
<a name="1329"><q-n>     1329  </q-n></a>
<a name="1330"><q-n>     1330  </q-n></a>  <q-m>// Drive output with internal version</q-m>
<a name="1331"><q-n>     1331  </q-n></a>  <q-w>assign</q-w> HREADYMUXM0 = i_hready_mux_m0;
<a name="1332"><q-n>     1332  </q-n></a>
<a name="1333"><q-n>     1333  </q-n></a>
<a name="1334"><q-n>     1334  </q-n></a>  <q-m>// Output stage for MI1</q-m>
<a name="1335"><q-n>     1335  </q-n></a>  cm3_outM1 u_cm3_outm1_1 (
<a name="1336"><q-n>     1336  </q-n></a>
<a name="1337"><q-n>     1337  </q-n></a>    <q-m>// Common AHB signals</q-m>
<a name="1338"><q-n>     1338  </q-n></a>    .HCLK       (HCLK),
<a name="1339"><q-n>     1339  </q-n></a>    .HRESETn    (HRESETn),
<a name="1340"><q-n>     1340  </q-n></a>
<a name="1341"><q-n>     1341  </q-n></a>    <q-m>// Port 0 Signals</q-m>
<a name="1342"><q-n>     1342  </q-n></a>    .sel_op0       (i_sel0to1),
<a name="1343"><q-n>     1343  </q-n></a>    .addr_op0      (i_addr0),
<a name="1344"><q-n>     1344  </q-n></a>    .auser_op0     (i_auser0),
<a name="1345"><q-n>     1345  </q-n></a>    .trans_op0     (i_trans0),
<a name="1346"><q-n>     1346  </q-n></a>    .write_op0     (i_write0),
<a name="1347"><q-n>     1347  </q-n></a>    .size_op0      (i_size0),
<a name="1348"><q-n>     1348  </q-n></a>    .burst_op0     (i_burst0),
<a name="1349"><q-n>     1349  </q-n></a>    .prot_op0      (i_prot0),
<a name="1350"><q-n>     1350  </q-n></a>    .master_op0    (i_master0),
<a name="1351"><q-n>     1351  </q-n></a>    .mastlock_op0  (i_mastlock0),
<a name="1352"><q-n>     1352  </q-n></a>    .wdata_op0     (HWDATAS0),
<a name="1353"><q-n>     1353  </q-n></a>    .wuser_op0     (HWUSERS0),
<a name="1354"><q-n>     1354  </q-n></a>    .held_tran_op0  (i_held_tran0),
<a name="1355"><q-n>     1355  </q-n></a>
<a name="1356"><q-n>     1356  </q-n></a>    <q-m>// Port 1 Signals</q-m>
<a name="1357"><q-n>     1357  </q-n></a>    .sel_op1       (i_sel1to1),
<a name="1358"><q-n>     1358  </q-n></a>    .addr_op1      (i_addr1),
<a name="1359"><q-n>     1359  </q-n></a>    .auser_op1     (i_auser1),
<a name="1360"><q-n>     1360  </q-n></a>    .trans_op1     (i_trans1),
<a name="1361"><q-n>     1361  </q-n></a>    .write_op1     (i_write1),
<a name="1362"><q-n>     1362  </q-n></a>    .size_op1      (i_size1),
<a name="1363"><q-n>     1363  </q-n></a>    .burst_op1     (i_burst1),
<a name="1364"><q-n>     1364  </q-n></a>    .prot_op1      (i_prot1),
<a name="1365"><q-n>     1365  </q-n></a>    .master_op1    (i_master1),
<a name="1366"><q-n>     1366  </q-n></a>    .mastlock_op1  (i_mastlock1),
<a name="1367"><q-n>     1367  </q-n></a>    .wdata_op1     (HWDATAS1),
<a name="1368"><q-n>     1368  </q-n></a>    .wuser_op1     (HWUSERS1),
<a name="1369"><q-n>     1369  </q-n></a>    .held_tran_op1  (i_held_tran1),
<a name="1370"><q-n>     1370  </q-n></a>
<a name="1371"><q-n>     1371  </q-n></a>    <q-m>// Port 3 Signals</q-m>
<a name="1372"><q-n>     1372  </q-n></a>    .sel_op3       (i_sel3to1),
<a name="1373"><q-n>     1373  </q-n></a>    .addr_op3      (i_addr3),
<a name="1374"><q-n>     1374  </q-n></a>    .auser_op3     (i_auser3),
<a name="1375"><q-n>     1375  </q-n></a>    .trans_op3     (i_trans3),
<a name="1376"><q-n>     1376  </q-n></a>    .write_op3     (i_write3),
<a name="1377"><q-n>     1377  </q-n></a>    .size_op3      (i_size3),
<a name="1378"><q-n>     1378  </q-n></a>    .burst_op3     (i_burst3),
<a name="1379"><q-n>     1379  </q-n></a>    .prot_op3      (i_prot3),
<a name="1380"><q-n>     1380  </q-n></a>    .master_op3    (i_master3),
<a name="1381"><q-n>     1381  </q-n></a>    .mastlock_op3  (i_mastlock3),
<a name="1382"><q-n>     1382  </q-n></a>    .wdata_op3     (HWDATAS4),
<a name="1383"><q-n>     1383  </q-n></a>    .wuser_op3     (HWUSERS4),
<a name="1384"><q-n>     1384  </q-n></a>    .held_tran_op3  (i_held_tran3),
<a name="1385"><q-n>     1385  </q-n></a>
<a name="1386"><q-n>     1386  </q-n></a>    <q-m>// Port 4 Signals</q-m>
<a name="1387"><q-n>     1387  </q-n></a>    .sel_op4       (i_sel4to1),
<a name="1388"><q-n>     1388  </q-n></a>    .addr_op4      (i_addr4),
<a name="1389"><q-n>     1389  </q-n></a>    .auser_op4     (i_auser4),
<a name="1390"><q-n>     1390  </q-n></a>    .trans_op4     (i_trans4),
<a name="1391"><q-n>     1391  </q-n></a>    .write_op4     (i_write4),
<a name="1392"><q-n>     1392  </q-n></a>    .size_op4      (i_size4),
<a name="1393"><q-n>     1393  </q-n></a>    .burst_op4     (i_burst4),
<a name="1394"><q-n>     1394  </q-n></a>    .prot_op4      (i_prot4),
<a name="1395"><q-n>     1395  </q-n></a>    .master_op4    (i_master4),
<a name="1396"><q-n>     1396  </q-n></a>    .mastlock_op4  (i_mastlock4),
<a name="1397"><q-n>     1397  </q-n></a>    .wdata_op4     (HWDATAS5),
<a name="1398"><q-n>     1398  </q-n></a>    .wuser_op4     (HWUSERS5),
<a name="1399"><q-n>     1399  </q-n></a>    .held_tran_op4  (i_held_tran4),
<a name="1400"><q-n>     1400  </q-n></a>
<a name="1401"><q-n>     1401  </q-n></a>    <q-m>// Slave read data and response</q-m>
<a name="1402"><q-n>     1402  </q-n></a>    .HREADYOUTM (HREADYOUTM1),
<a name="1403"><q-n>     1403  </q-n></a>
<a name="1404"><q-n>     1404  </q-n></a>    .active_op0    (i_active0to1),
<a name="1405"><q-n>     1405  </q-n></a>    .active_op1    (i_active1to1),
<a name="1406"><q-n>     1406  </q-n></a>    .active_op3    (i_active3to1),
<a name="1407"><q-n>     1407  </q-n></a>    .active_op4    (i_active4to1),
<a name="1408"><q-n>     1408  </q-n></a>
<a name="1409"><q-n>     1409  </q-n></a>    <q-m>// Slave Address/Control Signals</q-m>
<a name="1410"><q-n>     1410  </q-n></a>    .HSELM      (HSELM1),
<a name="1411"><q-n>     1411  </q-n></a>    .HADDRM     (HADDRM1),
<a name="1412"><q-n>     1412  </q-n></a>    .HAUSERM    (HAUSERM1),
<a name="1413"><q-n>     1413  </q-n></a>    .HTRANSM    (HTRANSM1),
<a name="1414"><q-n>     1414  </q-n></a>    .HWRITEM    (HWRITEM1),
<a name="1415"><q-n>     1415  </q-n></a>    .HSIZEM     (HSIZEM1),
<a name="1416"><q-n>     1416  </q-n></a>    .HBURSTM    (HBURSTM1),
<a name="1417"><q-n>     1417  </q-n></a>    .HPROTM     (HPROTM1),
<a name="1418"><q-n>     1418  </q-n></a>    .HMASTERM   (HMASTERM1),
<a name="1419"><q-n>     1419  </q-n></a>    .HMASTLOCKM (HMASTLOCKM1),
<a name="1420"><q-n>     1420  </q-n></a>    .HREADYMUXM (i_hready_mux_m1),
<a name="1421"><q-n>     1421  </q-n></a>    .HWUSERM    (HWUSERM1),
<a name="1422"><q-n>     1422  </q-n></a>    .HWDATAM    (HWDATAM1)
<a name="1423"><q-n>     1423  </q-n></a>
<a name="1424"><q-n>     1424  </q-n></a>    );
<a name="1425"><q-n>     1425  </q-n></a>
<a name="1426"><q-n>     1426  </q-n></a>  <q-m>// Drive output with internal version</q-m>
<a name="1427"><q-n>     1427  </q-n></a>  <q-w>assign</q-w> HREADYMUXM1 = i_hready_mux_m1;
<a name="1428"><q-n>     1428  </q-n></a>
<a name="1429"><q-n>     1429  </q-n></a>
<a name="1430"><q-n>     1430  </q-n></a>  <q-m>// Output stage for MI2</q-m>
<a name="1431"><q-n>     1431  </q-n></a>  cm3_outM2 u_cm3_outm2_2 (
<a name="1432"><q-n>     1432  </q-n></a>
<a name="1433"><q-n>     1433  </q-n></a>    <q-m>// Common AHB signals</q-m>
<a name="1434"><q-n>     1434  </q-n></a>    .HCLK       (HCLK),
<a name="1435"><q-n>     1435  </q-n></a>    .HRESETn    (HRESETn),
<a name="1436"><q-n>     1436  </q-n></a>
<a name="1437"><q-n>     1437  </q-n></a>    <q-m>// Port 2 Signals</q-m>
<a name="1438"><q-n>     1438  </q-n></a>    .sel_op2       (i_sel2to2),
<a name="1439"><q-n>     1439  </q-n></a>    .addr_op2      (i_addr2),
<a name="1440"><q-n>     1440  </q-n></a>    .auser_op2     (i_auser2),
<a name="1441"><q-n>     1441  </q-n></a>    .trans_op2     (i_trans2),
<a name="1442"><q-n>     1442  </q-n></a>    .write_op2     (i_write2),
<a name="1443"><q-n>     1443  </q-n></a>    .size_op2      (i_size2),
<a name="1444"><q-n>     1444  </q-n></a>    .burst_op2     (i_burst2),
<a name="1445"><q-n>     1445  </q-n></a>    .prot_op2      (i_prot2),
<a name="1446"><q-n>     1446  </q-n></a>    .master_op2    (i_master2),
<a name="1447"><q-n>     1447  </q-n></a>    .mastlock_op2  (i_mastlock2),
<a name="1448"><q-n>     1448  </q-n></a>    .wdata_op2     (HWDATAS3),
<a name="1449"><q-n>     1449  </q-n></a>    .wuser_op2     (HWUSERS3),
<a name="1450"><q-n>     1450  </q-n></a>    .held_tran_op2  (i_held_tran2),
<a name="1451"><q-n>     1451  </q-n></a>
<a name="1452"><q-n>     1452  </q-n></a>    <q-m>// Port 3 Signals</q-m>
<a name="1453"><q-n>     1453  </q-n></a>    .sel_op3       (i_sel3to2),
<a name="1454"><q-n>     1454  </q-n></a>    .addr_op3      (i_addr3),
<a name="1455"><q-n>     1455  </q-n></a>    .auser_op3     (i_auser3),
<a name="1456"><q-n>     1456  </q-n></a>    .trans_op3     (i_trans3),
<a name="1457"><q-n>     1457  </q-n></a>    .write_op3     (i_write3),
<a name="1458"><q-n>     1458  </q-n></a>    .size_op3      (i_size3),
<a name="1459"><q-n>     1459  </q-n></a>    .burst_op3     (i_burst3),
<a name="1460"><q-n>     1460  </q-n></a>    .prot_op3      (i_prot3),
<a name="1461"><q-n>     1461  </q-n></a>    .master_op3    (i_master3),
<a name="1462"><q-n>     1462  </q-n></a>    .mastlock_op3  (i_mastlock3),
<a name="1463"><q-n>     1463  </q-n></a>    .wdata_op3     (HWDATAS4),
<a name="1464"><q-n>     1464  </q-n></a>    .wuser_op3     (HWUSERS4),
<a name="1465"><q-n>     1465  </q-n></a>    .held_tran_op3  (i_held_tran3),
<a name="1466"><q-n>     1466  </q-n></a>
<a name="1467"><q-n>     1467  </q-n></a>    <q-m>// Slave read data and response</q-m>
<a name="1468"><q-n>     1468  </q-n></a>    .HREADYOUTM (HREADYOUTM2),
<a name="1469"><q-n>     1469  </q-n></a>
<a name="1470"><q-n>     1470  </q-n></a>    .active_op2    (i_active2to2),
<a name="1471"><q-n>     1471  </q-n></a>    .active_op3    (i_active3to2),
<a name="1472"><q-n>     1472  </q-n></a>
<a name="1473"><q-n>     1473  </q-n></a>    <q-m>// Slave Address/Control Signals</q-m>
<a name="1474"><q-n>     1474  </q-n></a>    .HSELM      (HSELM2),
<a name="1475"><q-n>     1475  </q-n></a>    .HADDRM     (HADDRM2),
<a name="1476"><q-n>     1476  </q-n></a>    .HAUSERM    (HAUSERM2),
<a name="1477"><q-n>     1477  </q-n></a>    .HTRANSM    (HTRANSM2),
<a name="1478"><q-n>     1478  </q-n></a>    .HWRITEM    (HWRITEM2),
<a name="1479"><q-n>     1479  </q-n></a>    .HSIZEM     (HSIZEM2),
<a name="1480"><q-n>     1480  </q-n></a>    .HBURSTM    (HBURSTM2),
<a name="1481"><q-n>     1481  </q-n></a>    .HPROTM     (HPROTM2),
<a name="1482"><q-n>     1482  </q-n></a>    .HMASTERM   (HMASTERM2),
<a name="1483"><q-n>     1483  </q-n></a>    .HMASTLOCKM (HMASTLOCKM2),
<a name="1484"><q-n>     1484  </q-n></a>    .HREADYMUXM (i_hready_mux_m2),
<a name="1485"><q-n>     1485  </q-n></a>    .HWUSERM    (HWUSERM2),
<a name="1486"><q-n>     1486  </q-n></a>    .HWDATAM    (HWDATAM2)
<a name="1487"><q-n>     1487  </q-n></a>
<a name="1488"><q-n>     1488  </q-n></a>    );
<a name="1489"><q-n>     1489  </q-n></a>
<a name="1490"><q-n>     1490  </q-n></a>  <q-m>// Drive output with internal version</q-m>
<a name="1491"><q-n>     1491  </q-n></a>  <q-w>assign</q-w> HREADYMUXM2 = i_hready_mux_m2;
<a name="1492"><q-n>     1492  </q-n></a>
<a name="1493"><q-n>     1493  </q-n></a>
<a name="1494"><q-n>     1494  </q-n></a>  <q-m>// Output stage for MI3</q-m>
<a name="1495"><q-n>     1495  </q-n></a>  cm3_outM3 u_cm3_outm3_3 (
<a name="1496"><q-n>     1496  </q-n></a>
<a name="1497"><q-n>     1497  </q-n></a>    <q-m>// Common AHB signals</q-m>
<a name="1498"><q-n>     1498  </q-n></a>    .HCLK       (HCLK),
<a name="1499"><q-n>     1499  </q-n></a>    .HRESETn    (HRESETn),
<a name="1500"><q-n>     1500  </q-n></a>
<a name="1501"><q-n>     1501  </q-n></a>    <q-m>// Port 2 Signals</q-m>
<a name="1502"><q-n>     1502  </q-n></a>    .sel_op2       (i_sel2to3),
<a name="1503"><q-n>     1503  </q-n></a>    .addr_op2      (i_addr2),
<a name="1504"><q-n>     1504  </q-n></a>    .auser_op2     (i_auser2),
<a name="1505"><q-n>     1505  </q-n></a>    .trans_op2     (i_trans2),
<a name="1506"><q-n>     1506  </q-n></a>    .write_op2     (i_write2),
<a name="1507"><q-n>     1507  </q-n></a>    .size_op2      (i_size2),
<a name="1508"><q-n>     1508  </q-n></a>    .burst_op2     (i_burst2),
<a name="1509"><q-n>     1509  </q-n></a>    .prot_op2      (i_prot2),
<a name="1510"><q-n>     1510  </q-n></a>    .master_op2    (i_master2),
<a name="1511"><q-n>     1511  </q-n></a>    .mastlock_op2  (i_mastlock2),
<a name="1512"><q-n>     1512  </q-n></a>    .wdata_op2     (HWDATAS3),
<a name="1513"><q-n>     1513  </q-n></a>    .wuser_op2     (HWUSERS3),
<a name="1514"><q-n>     1514  </q-n></a>    .held_tran_op2  (i_held_tran2),
<a name="1515"><q-n>     1515  </q-n></a>
<a name="1516"><q-n>     1516  </q-n></a>    <q-m>// Port 4 Signals</q-m>
<a name="1517"><q-n>     1517  </q-n></a>    .sel_op4       (i_sel4to3),
<a name="1518"><q-n>     1518  </q-n></a>    .addr_op4      (i_addr4),
<a name="1519"><q-n>     1519  </q-n></a>    .auser_op4     (i_auser4),
<a name="1520"><q-n>     1520  </q-n></a>    .trans_op4     (i_trans4),
<a name="1521"><q-n>     1521  </q-n></a>    .write_op4     (i_write4),
<a name="1522"><q-n>     1522  </q-n></a>    .size_op4      (i_size4),
<a name="1523"><q-n>     1523  </q-n></a>    .burst_op4     (i_burst4),
<a name="1524"><q-n>     1524  </q-n></a>    .prot_op4      (i_prot4),
<a name="1525"><q-n>     1525  </q-n></a>    .master_op4    (i_master4),
<a name="1526"><q-n>     1526  </q-n></a>    .mastlock_op4  (i_mastlock4),
<a name="1527"><q-n>     1527  </q-n></a>    .wdata_op4     (HWDATAS5),
<a name="1528"><q-n>     1528  </q-n></a>    .wuser_op4     (HWUSERS5),
<a name="1529"><q-n>     1529  </q-n></a>    .held_tran_op4  (i_held_tran4),
<a name="1530"><q-n>     1530  </q-n></a>
<a name="1531"><q-n>     1531  </q-n></a>    <q-m>// Slave read data and response</q-m>
<a name="1532"><q-n>     1532  </q-n></a>    .HREADYOUTM (HREADYOUTM3),
<a name="1533"><q-n>     1533  </q-n></a>
<a name="1534"><q-n>     1534  </q-n></a>    .active_op2    (i_active2to3),
<a name="1535"><q-n>     1535  </q-n></a>    .active_op4    (i_active4to3),
<a name="1536"><q-n>     1536  </q-n></a>
<a name="1537"><q-n>     1537  </q-n></a>    <q-m>// Slave Address/Control Signals</q-m>
<a name="1538"><q-n>     1538  </q-n></a>    .HSELM      (HSELM3),
<a name="1539"><q-n>     1539  </q-n></a>    .HADDRM     (HADDRM3),
<a name="1540"><q-n>     1540  </q-n></a>    .HAUSERM    (HAUSERM3),
<a name="1541"><q-n>     1541  </q-n></a>    .HTRANSM    (HTRANSM3),
<a name="1542"><q-n>     1542  </q-n></a>    .HWRITEM    (HWRITEM3),
<a name="1543"><q-n>     1543  </q-n></a>    .HSIZEM     (HSIZEM3),
<a name="1544"><q-n>     1544  </q-n></a>    .HBURSTM    (HBURSTM3),
<a name="1545"><q-n>     1545  </q-n></a>    .HPROTM     (HPROTM3),
<a name="1546"><q-n>     1546  </q-n></a>    .HMASTERM   (HMASTERM3),
<a name="1547"><q-n>     1547  </q-n></a>    .HMASTLOCKM (HMASTLOCKM3),
<a name="1548"><q-n>     1548  </q-n></a>    .HREADYMUXM (i_hready_mux_m3),
<a name="1549"><q-n>     1549  </q-n></a>    .HWUSERM    (HWUSERM3),
<a name="1550"><q-n>     1550  </q-n></a>    .HWDATAM    (HWDATAM3)
<a name="1551"><q-n>     1551  </q-n></a>
<a name="1552"><q-n>     1552  </q-n></a>    );
<a name="1553"><q-n>     1553  </q-n></a>
<a name="1554"><q-n>     1554  </q-n></a>  <q-m>// Drive output with internal version</q-m>
<a name="1555"><q-n>     1555  </q-n></a>  <q-w>assign</q-w> HREADYMUXM3 = i_hready_mux_m3;
<a name="1556"><q-n>     1556  </q-n></a>
<a name="1557"><q-n>     1557  </q-n></a>
<a name="1558"><q-n>     1558  </q-n></a><q-w>endmodule</q-w>
<a name="1559"><q-n>     1559  </q-n></a>
<a name="1560"><q-n>     1560  </q-n></a><q-m>// --================================= End ===================================--</q-m>
</pre>
</tt>

  
</body>
</html>
