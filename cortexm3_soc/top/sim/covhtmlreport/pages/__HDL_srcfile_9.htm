
<html>
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>Questa Coverage Report</title>
  <link rel="StyleSheet" media="screen" href="../css/hdl2html.css"/>
</head>
<body id="hdl2html">
  <tt>
<pre>
<a name="1"><q-n>     1  </q-n></a>
<a name="2"><q-n>     2  </q-n></a><q-m>/////////////////////////////////////////////////////////////////////////</q-m>
<a name="3"><q-n>     3  </q-n></a><q-m>// Company        : SCALEDGE </q-m>
<a name="4"><q-n>     4  </q-n></a><q-m>// Engineer       : SIDDHARTH </q-m>
<a name="5"><q-n>     5  </q-n></a><q-m>// Create Date    : 10-10-2023</q-m>
<a name="6"><q-n>     6  </q-n></a><q-m>// File Name   	  : uart_agent.sv</q-m>
<a name="7"><q-n>     7  </q-n></a><q-m>// Class Name 	  : uart_agent</q-m>
<a name="8"><q-n>     8  </q-n></a><q-m>// Project Name	  : UART_UVC </q-m>
<a name="9"><q-n>     9  </q-n></a><q-m>// Description	  : </q-m>
<a name="10"><q-n>     10  </q-n></a><q-m>//////////////////////////////////////////////////////////////////////////</q-m>
<a name="11"><q-n>     11  </q-n></a>
<a name="12"><q-n>     12  </q-n></a><q-w>class</q-w> uart_tx_agent <q-w>extends</q-w> uvm_agent;
<a name="13"><q-n>     13  </q-n></a>
<a name="14"><q-n>     14  </q-n></a>    <q-m>//UVM factory registration</q-m>
<a name="15"><q-n>     15  </q-n></a>    `uvm_component_utils(uart_tx_agent)
<a name="16"><q-n>     16  </q-n></a>    uart_reg_config  reg_cfg_h;   
<a name="17"><q-n>     17  </q-n></a>
<a name="18"><q-n>     18  </q-n></a>   <q-m>//uvm analysis port</q-m>
<a name="19"><q-n>     19  </q-n></a>    uvm_analysis_port#(uart_seq_item) an_port;
<a name="20"><q-n>     20  </q-n></a>
<a name="21"><q-n>     21  </q-n></a>    <q-m>//new constructor declaration</q-m>
<a name="22"><q-n>     22  </q-n></a>    <q-w>function</q-w> <q-w>new</q-w>(<q-w>string</q-w> name= <q-l>"uagent_h"</q-l>,uvm_component parent);
<a name="23"><q-n>     23  </q-n></a>        <q-w>super</q-w>.<q-w>new</q-w>(name,parent);
<a name="24"><q-n>     24  </q-n></a>    <q-w>endfunction</q-w>
<a name="25"><q-n>     25  </q-n></a>
<a name="26"><q-n>     26  </q-n></a>    <q-m>//interface handle</q-m>
<a name="27"><q-n>     27  </q-n></a>    <q-w>virtual</q-w> uart_interface   vif;
<a name="28"><q-n>     28  </q-n></a>     uart_driver              drv;
<a name="29"><q-n>     29  </q-n></a>    uart_sequencer           seqr;
<a name="30"><q-n>     30  </q-n></a>    uart_tx_monitor          tx_mon;
<a name="31"><q-n>     31  </q-n></a>    uart_agent_config agcfg;
<a name="32"><q-n>     32  </q-n></a>
<a name="33"><q-n>     33  </q-n></a><q-m>///////////////////////////////////////////////////////////////////////////////////////////////////</q-m>
<a name="34"><q-n>     34  </q-n></a><q-m>//  Function Build phase</q-m>
<a name="35"><q-n>     35  </q-n></a><q-m>////////////////////////////////////////////////////////////////////////////////////////////////////</q-m>
<a name="36"><q-n>     36  </q-n></a>    <q-w>function</q-w> <q-w>void</q-w> build_phase(uvm_phase phase);
<a name="37"><q-n>     37  </q-n></a>    `uvm_info(get_name(),<q-l>"Starting of Build Phase"</q-l>,UVM_DEBUG)
<a name="38"><q-n>     38  </q-n></a>        <q-w>super</q-w>.build_phase(phase);
<a name="39"><q-n>     39  </q-n></a>        <q-m>//creating analysis port</q-m>
<a name="40"><q-n>     40  </q-n></a>        an_port = <q-w>new</q-w>(<q-l>"an_port"</q-l>,<q-w>this</q-w>);
<a name="41"><q-n>     41  </q-n></a>       
<a name="42"><q-n>     42  </q-n></a>       <q-w>if</q-w>(!uvm_config_db#(uart_agent_config)::get(<q-w>this</q-w>,<q-l>""</q-l>,<q-l>"agcfg"</q-l>,agcfg))
<a name="43"><q-n>     43  </q-n></a>           `uvm_fatal(get_full_name(),<q-l>" not getting agent config class "</q-l>);
<a name="44"><q-n>     44  </q-n></a> 
<a name="45"><q-n>     45  </q-n></a>
<a name="46"><q-n>     46  </q-n></a>        <q-w>if</q-w>(agcfg.is_master == MASTER)<q-w>begin</q-w>
<a name="47"><q-n>     47  </q-n></a>        <q-m>// getting the uart interface from top</q-m>
<a name="48"><q-n>     48  </q-n></a>          <q-w>if</q-w>(!uvm_config_db #(<q-w>virtual</q-w> uart_interface)::get(<q-w>this</q-w>,<q-l>""</q-l>,<q-l>"mas_vif"</q-l>,vif))
<a name="49"><q-n>     49  </q-n></a>              `uvm_fatal(get_name(),<q-l>"Interface Configuration is Faild !!!!"</q-l>);
<a name="50"><q-n>     50  </q-n></a>	<q-w>end</q-w>
<a name="51"><q-n>     51  </q-n></a>
<a name="52"><q-n>     52  </q-n></a>        <q-w>if</q-w>(agcfg.is_master == SLAVE)<q-w>begin</q-w>
<a name="53"><q-n>     53  </q-n></a>        <q-m>// getting the uart interface from top</q-m>
<a name="54"><q-n>     54  </q-n></a>          <q-w>if</q-w>(!uvm_config_db #(<q-w>virtual</q-w> uart_interface)::get(<q-w>this</q-w>,<q-l>""</q-l>,<q-l>"slv_vif"</q-l>,vif))
<a name="55"><q-n>     55  </q-n></a>              `uvm_fatal(get_name(),<q-l>"Interface Configuration is Faild !!!!"</q-l>);
<a name="56"><q-n>     56  </q-n></a>	<q-w>end</q-w>
<a name="57"><q-n>     57  </q-n></a>      
<a name="58"><q-n>     58  </q-n></a>             drv = uart_driver::type_id::create(<q-l>"drv"</q-l>,<q-w>this</q-w>);
<a name="59"><q-n>     59  </q-n></a>             seqr = uart_sequencer::type_id::create(<q-l>"seqr"</q-l>,<q-w>this</q-w>);
<a name="60"><q-n>     60  </q-n></a>             tx_mon = uart_tx_monitor::type_id::create(<q-l>"tx_mon"</q-l>,<q-w>this</q-w>);
<a name="61"><q-n>     61  </q-n></a>      `uvm_info(get_name(),<q-l>"Ending of Build Phase"</q-l>,UVM_DEBUG)
<a name="62"><q-n>     62  </q-n></a>  <q-w>endfunction</q-w>:build_phase
<a name="63"><q-n>     63  </q-n></a>
<a name="64"><q-n>     64  </q-n></a><q-m>///////////////////////////////////////////////////////////////////////////////////////////////////</q-m>
<a name="65"><q-n>     65  </q-n></a><q-m>//  Function Connect phase</q-m>
<a name="66"><q-n>     66  </q-n></a><q-m>///////////////////////////////////////////////////////////////////////////////////////////////////</q-m>
<a name="67"><q-n>     67  </q-n></a>  
<a name="68"><q-n>     68  </q-n></a> <q-w>function</q-w> <q-w>void</q-w> connect_phase(uvm_phase phase);
<a name="69"><q-n>     69  </q-n></a>    `uvm_info(get_name(),<q-l>"Starting of Connect Phase"</q-l>,UVM_DEBUG)
<a name="70"><q-n>     70  </q-n></a>         tx_mon.uif = vif;
<a name="71"><q-n>     71  </q-n></a>         drv.seq_item_port.connect(seqr.seq_item_export);
<a name="72"><q-n>     72  </q-n></a>         drv.uif = vif;
<a name="73"><q-n>     73  </q-n></a>         seqr.get_port.connect(tx_mon.get_imp);
<a name="74"><q-n>     74  </q-n></a>         tx_mon.item_collected_port.connect(an_port);
<a name="75"><q-n>     75  </q-n></a>
<a name="76"><q-n>     76  </q-n></a>  <q-w>endfunction</q-w>:connect_phase
<a name="77"><q-n>     77  </q-n></a>
<a name="78"><q-n>     78  </q-n></a><q-w>endclass</q-w>:uart_tx_agent
<a name="79"><q-n>     79  </q-n></a>
<a name="80"><q-n>     80  </q-n></a>
<a name="81"><q-n>     81  </q-n></a>    
<a name="82"><q-n>     82  </q-n></a>            
<a name="83"><q-n>     83  </q-n></a>
<a name="84"><q-n>     84  </q-n></a>
<a name="85"><q-n>     85  </q-n></a>
<a name="86"><q-n>     86  </q-n></a>
</pre>
</tt>

  
</body>
</html>
