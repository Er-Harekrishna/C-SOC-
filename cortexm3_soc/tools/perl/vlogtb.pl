#!/usr/bin/perl
##//////////////////////////////////////////////////////////////////////////////
##                        Coypright (C) Aviral Mittal.
##//////////////////////////////////////////////////////////////////////////////
##   All rights reserved. Reproducion in whole or in part is prohibited without
##   written consent of copyright Owner.The professional use of this material
##   is subject to the copy right owners approval in written.
##//////////////////////////////////////////////////////////////////////////////
################################################################################
# This script Generates a TEMPLATE testbench for a verilog module
# IMP : The verilog input file should be clean(i.e with no syntax errors)
#       Since this script assumes that the input file has no syntax errors,
#       Funny results can be seen if the input file does have syntax errors. 
# Usage:
# 
# unix > ./vlogtb.pl <verilog file> 
#
# Requirements/Limitations
# #1. keyword module and the name of module should exists on same line
# #2. Only one port per line is allowed
################################################################################
if(@ARGV[0] eq "") {
  print "ERROR: Insufficient input fields\n";
  print "\n";
  print "Usage:unix> ./vlogtb.pl <verilog file> \n";
  print "\n";
  exit;
}
################################################################################
# Initialization of certain pre-defined variables
################################################################################
system ("perl -i.bak -p -e 's#;#;\n#ig' @ARGV[0]");
$i = 1;
$j = 1;
open(out,">@ARGV[0].tb.v") || die "Couldn't open output file.\n ";

################################################################################
# Parser Begins Here
################################################################################
open(infile0,"<@ARGV[0]") || die "Couldn't open infile0. @ARGV[0]\n ";
$no_of_ports = 0;
print out "\/\/########################################################\n";
print out "\/\/# Test Bench Generated by vlogtb.pl \n";
print out "\/\/# Author : Aviral Mittal\n";
print out "\/\/########################################################\n";
  while ($line = <infile0>) {
    @lines = split(/\/\//, $line);
    $vline = " $lines[0]"; ##Valid line witout comments #Add a space at start
    $vline =~ s/\(/ \(/; # Add a space to convert counter(clk..) to counter (clk..) 
    chomp($vline);

    #Look for parameters or timescales
    if($vline =~ /parameter|timescale/) 
    {
      print out "$vline\n";
    }

    #Look for Module def
    if($vline =~ /\s+(module)\s+(\w+)\s+(.*)/) 
    {
      #debug print "vline = $vline\n";
      $orig_module_name = "$2";
      $module_name = "$2"."_tb";
      print out "module $module_name ;\n";
    }# if($vline =~ /\s+(module)\s+(.*)\s+(.*)/) 

    #Look for ports
    if($module_name ne "")
    {
      if($vline =~ /\s+(input|output|inout)\s+/)
      {
        $pt=$1; # pt = port type
        if($pt eq input) 
        {
          $nt = "reg "; #nt = new type
        }# if($pt eq input) 
        else
        {
          $nt = "wire ";
        }# if($pt == input) 

        $vline =~ s/ //g; # remove all spaces from the line
        $pname = $vline; # Make a copy to extract port name
        $vline =~ s/$pt/$nt/g;
        $vline =~ s/\]/\] /g;
        print out "  $vline\n";

        $pname =~ s/$pt//g; #pname = port name
        #At this time panme will be either like [wi-1:0]cout or cen;
        $pname =~ s/\]/\] /g; #pname = port name
        $pname =~ s/;//g; #pname = port name
        if($pname =~ /(\[(\S+):(\S+)\])\s+(.*)/) #S is for anything except spaces
        {
          #debug print "$4\n";
          $nport = $4;
        }
        else
        {
          #debug print "$pname\n";
          $nport = $pname;
        }
        push(@ports, "$nport"); 
        $no_of_ports = $no_of_ports+1;
      }# if($vline =~ /\s+(input|output|inout)\s+/)
    }# if($module_name ne "")

    
    #print out "$lines[0]";
  } #while ($line = <infile0>)

  #Sanity Messages:
  if($module_name eq "")
  {
    print "Input file does not have a module\n";
  }# if($module_name eq "")
  else
  {
    print out "$orig_module_name $orig_module_name (\n";
    #debug print "no of ele in ports = $no_of_ports\n";
    $ii=0;
    foreach $pp(@ports)
    {
      $ii=$ii+1;
      if($ii == $no_of_ports)
      {
        print out "\.$pp($pp)\n"; #no comma in last port
      }
      else
      {
        print out "\.$pp($pp),\n";
      }
    }# foreach $file(@FileList)
    print out ");\n\n";
 
    #initial blcok
    print out "  initial\n";
    print out "  begin\n";
    print out "    \/\/clk = 0 ;\n";
    print out "    \/\/reset = 0 ;\n";
    print out "  end\n";

    print out "  \/\/always #5 clk = ~clk ;\n";

    print out "\nendmodule\n";
  }#else of if($module_name eq "")
system ("mv -f $ARGV[0].bak $ARGV[0]");
print "-----------------\n";
print "output file is $ARGV[0].tb.v\n";
print "-----------------\n";
################################################################################

